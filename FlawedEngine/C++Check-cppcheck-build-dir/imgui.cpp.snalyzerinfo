ImVec2
ImVec2
operator[] call:[assert,return]
operator[] call:[assert,return]
ImVec4
ImVec4
operatornew
operatordelete
IM_DELETE call:[MemFree,T] noreturn:[MemFree]
SelectAll
ClearSelection
HasSelection
ImGuiWindowClass call:[memset,sizeof]
ImGuiPayload call:[Clear] noreturn:[Clear]
Clear call:[memset,sizeof]
IsDataType call:[strcmp]
IsPreview
IsDelivery
ImGuiTableColumnSortSpecs call:[memset,sizeof] noreturn:[memset]
ImGuiTableSortSpecs call:[memset,sizeof] noreturn:[memset]
ImGuiOnceUponAFrame
operatorbool call:[GetFrameCount]
Clear call:[Build] noreturn:[Build]
IsActive call:[empty] noreturn:[empty]
ImGuiTextRange
ImGuiTextRange
empty
ImGuiTextBuffer
operator[] call:[assert]
begin call:[front]
end call:[back]
size
empty
clear call:[clear] noreturn:[clear]
reserve call:[reserve] noreturn:[reserve]
c_str
ImGuiStoragePair
ImGuiStoragePair
ImGuiStoragePair
Clear call:[clear] noreturn:[clear]
ImGuiListClipper call:[Begin,memset,sizeof] noreturn:[Begin]
ImColor
ImColor
ImColor
ImColor
ImColor
operatorint call:[ColorConvertFloat4ToU32] noreturn:[ColorConvertFloat4ToU32]
operatorImVec4
SetHSV call:[ColorConvertHSVtoRGB]
HSV call:[ColorConvertHSVtoRGB,ImColor] noreturn:[ImColor]
ImDrawCmd call:[memset,sizeof] noreturn:[memset]
GetTexID
ImDrawListSplitter call:[memset,sizeof] noreturn:[memset]
ImDrawListSplitter call:[ClearFreeMemory] noreturn:[ClearFreeMemory]
Clear
ImDrawList call:[memset,sizeof]
ImDrawList call:[_ClearFreeMemory] noreturn:[_ClearFreeMemory]
GetClipRectMin call:[ImVec2,back] noreturn:[ImVec2]
GetClipRectMax call:[ImVec2,back] noreturn:[ImVec2]
PathClear
PathLineTo call:[push_back] noreturn:[push_back]
PathLineToMergeDuplicate call:[memcmp,push_back] noreturn:[push_back]
PathFillConvex call:[AddConvexPolyFilled]
PathStroke call:[AddPolyline]
ChannelsSplit call:[Split] noreturn:[Split]
ChannelsMerge call:[Merge] noreturn:[Merge]
ChannelsSetCurrent call:[SetCurrentChannel] noreturn:[SetCurrentChannel]
PrimWriteVtx
PrimWriteIdx
PrimVtx call:[PrimWriteIdx,PrimWriteVtx] noreturn:[PrimWriteVtx]
AddBezierCurve call:[AddBezierCubic] noreturn:[AddBezierCubic]
PathBezierCurveTo call:[PathBezierCubicCurveTo] noreturn:[PathBezierCubicCurveTo]
ImDrawData call:[Clear] noreturn:[Clear]
Clear call:[memset,sizeof] noreturn:[memset]
ImFontGlyphRangesBuilder call:[Clear] noreturn:[Clear]
Clear call:[memset,resize,sizeof] noreturn:[memset]
GetBit call:[return]
SetBit
AddChar call:[SetBit] noreturn:[SetBit]
ImFontAtlasCustomRect call:[ImVec2]
IsPacked
IsBuilt
SetTexID
GetCustomRectByIndex call:[assert]
GetCharAdvance call:[return]
IsLoaded
GetDebugName
ImGuiViewport call:[memset,sizeof] noreturn:[memset]
ImGuiViewport call:[assert] noreturn:[assert]
GetCenter call:[ImVec2] noreturn:[ImVec2]
GetWorkCenter call:[ImVec2] noreturn:[ImVec2]
ImGuiPlatformIO call:[memset,sizeof] noreturn:[memset]
ImGuiPlatformMonitor call:[ImVec2]
ImGuiPlatformImeData call:[memset,sizeof] noreturn:[memset]
CaptureKeyboardFromApp call:[SetNextFrameWantCaptureKeyboard] noreturn:[SetNextFrameWantCaptureKeyboard]
CaptureMouseFromApp call:[SetNextFrameWantCaptureMouse] noreturn:[SetNextFrameWantCaptureMouse]
GetWindowContentRegionWidth call:[GetWindowContentRegionMax,GetWindowContentRegionMin]
ListBoxHeader call:[BeginListBox] noreturn:[BeginListBox]
ListBoxFooter call:[EndListBox] noreturn:[EndListBox]
ImQsort call:[qsort] noreturn:[qsort]
ImIsPowerOfTwo
ImIsPowerOfTwo
ImUpperPowerOfTwo
ImCharIsBlankA
ImCharIsBlankW
operator/ call:[ImVec2] noreturn:[ImVec2]
operator+ call:[ImVec2] noreturn:[ImVec2]
operator- call:[ImVec2] noreturn:[ImVec2]
operator* call:[ImVec2] noreturn:[ImVec2]
operator/ call:[ImVec2] noreturn:[ImVec2]
operator*=
operator/=
operator+=
operator-=
operator*=
operator/=
operator+ call:[ImVec4] noreturn:[ImVec4]
operator- call:[ImVec4] noreturn:[ImVec4]
operator* call:[ImVec4] noreturn:[ImVec4]
ImPow call:[pow] noreturn:[pow]
ImLog call:[logf] noreturn:[logf]
ImLog call:[log] noreturn:[log]
ImAbs
ImAbs call:[fabsf] noreturn:[fabsf]
ImAbs call:[fabs] noreturn:[fabs]
ImSign call:[return]
ImSign call:[return]
ImRsqrt call:[sqrtf] noreturn:[sqrtf]
ImRsqrt call:[sqrt] noreturn:[sqrt]
ImMin
ImMax
ImClamp call:[return]
ImLerp call:[return]
ImSwap
ImAddClampOverflow
ImSubClampOverflow
ImMin call:[ImVec2] noreturn:[ImVec2]
ImMax call:[ImVec2] noreturn:[ImVec2]
ImClamp call:[ImVec2] noreturn:[ImVec2]
ImLerp call:[ImVec2] noreturn:[ImVec2]
ImLerp call:[ImVec2] noreturn:[ImVec2]
ImLerp call:[ImVec4] noreturn:[ImVec4]
ImSaturate call:[return]
ImLengthSqr call:[return]
ImLengthSqr call:[return]
ImInvLength call:[ImRsqrt] noreturn:[ImRsqrt]
ImFloor call:[return]
ImFloorSigned call:[return]
ImFloor call:[ImVec2] noreturn:[ImVec2]
ImFloorSigned call:[ImFloorSigned,ImVec2] noreturn:[ImVec2]
ImModPositive call:[return]
ImDot
ImRotate call:[ImVec2] noreturn:[ImVec2]
ImLinearSweep call:[ImMax,ImMin] noreturn:[ImMax,ImMin]
ImMul call:[ImVec2] noreturn:[ImVec2]
ImIsFloatAboveGuaranteedIntegerPrecision
ImTriangleArea call:[fabsf]
ImVec1
ImVec1
ImVec2ih
ImVec2ih
ImVec2ih
ImRect
ImRect
ImRect
ImRect
GetCenter call:[ImVec2] noreturn:[ImVec2]
GetSize call:[ImVec2] noreturn:[ImVec2]
GetWidth
GetHeight
GetArea call:[return]
GetTL
GetTR call:[ImVec2] noreturn:[ImVec2]
GetBL call:[ImVec2] noreturn:[ImVec2]
GetBR
Contains
Contains
Overlaps
Add
Add
Expand
Expand
Translate
TranslateX
TranslateY
ClipWith call:[ImMax,ImMin] noreturn:[ImMin]
ClipWithFull call:[ImClamp] noreturn:[ImClamp]
Floor
IsInverted
ToVec4 call:[ImVec4] noreturn:[ImVec4]
ImBitArrayClearBit
ImBitArraySetBit
ImBitArraySetBitRange
Create call:[memset,resize,sizeof] noreturn:[memset]
Clear call:[clear] noreturn:[clear]
TestBit call:[ImBitArrayTestBit,assert] noreturn:[ImBitArrayTestBit]
SetBit call:[ImBitArraySetBit,assert] noreturn:[ImBitArraySetBit]
ClearBit call:[ImBitArrayClearBit,assert] noreturn:[ImBitArrayClearBit]
ImSpanAllocator call:[memset,sizeof] noreturn:[memset]
Reserve call:[assert]
GetArenaSizeInBytes
SetArenaBasePtr
GetSpanPtrBegin call:[assert,return]
GetSpanPtrEnd call:[assert,return]
GetSpan call:[GetSpanPtrBegin,GetSpanPtrEnd,set] noreturn:[set]
clear call:[clear]
size
get_line_begin
get_line_end
Clear call:[resize,sizeof] noreturn:[resize]
ClearFreeMemory call:[clear,sizeof] noreturn:[clear]
GetDrawListCount call:[sizeof]
ImGuiStyleMod
ImGuiStyleMod
ImGuiStyleMod
ImGuiComboPreviewData call:[memset,sizeof] noreturn:[memset]
ImGuiMenuColumns call:[memset,sizeof] noreturn:[memset]
ImGuiInputTextState call:[memset,sizeof] noreturn:[memset]
ClearText call:[CursorClamp] noreturn:[CursorClamp]
ClearFreeMemory call:[clear] noreturn:[clear]
GetUndoAvailCount
GetRedoAvailCount
CursorAnimReset
CursorClamp call:[ImMin] noreturn:[ImMin]
HasSelection
ClearSelection
GetCursorPos
GetSelectionStart
GetSelectionEnd
SelectAll
ImGuiPopupData call:[memset,sizeof]
ImGuiNextWindowData call:[memset,sizeof] noreturn:[memset]
ClearFlags
ImGuiNextItemData call:[memset,sizeof] noreturn:[memset]
ClearFlags
ImGuiLastItemData call:[memset,sizeof] noreturn:[memset]
ImGuiStackSizes call:[memset,sizeof] noreturn:[memset]
ImGuiPtrOrIndex
ImGuiPtrOrIndex
ImGuiInputEvent call:[memset,sizeof] noreturn:[memset]
ImGuiKeyRoutingData
ImGuiKeyRoutingTable call:[Clear] noreturn:[Clear]
Clear call:[clear,sizeof] noreturn:[clear]
ImGuiKeyOwnerData
FromIndices
FromPositions
ImGuiListClipperData call:[memset,sizeof] noreturn:[memset]
Reset call:[resize] noreturn:[resize]
ImGuiNavItemData call:[Clear] noreturn:[Clear]
Clear
ImGuiOldColumnData call:[memset,sizeof] noreturn:[memset]
ImGuiOldColumns call:[memset,sizeof] noreturn:[memset]
IsRootNode
IsDockSpace call:[return]
IsFloatingNode
IsCentralNode call:[return]
IsHiddenTabBar call:[return]
IsNoTabBar call:[return]
IsSplitNode
IsLeafNode
IsEmpty
Rect call:[ImRect] noreturn:[ImRect]
SetLocalFlags call:[UpdateMergedFlags] noreturn:[UpdateMergedFlags]
UpdateMergedFlags
ImGuiDockContext call:[memset,sizeof] noreturn:[memset]
ImGuiViewportP call:[ImVec2] noreturn:[ImVec2]
ImGuiViewportP call:[IM_DELETE] noreturn:[IM_DELETE]
ClearRequestFlags
CalcWorkRectPos call:[ImVec2] noreturn:[ImVec2]
CalcWorkRectSize call:[ImMax,ImVec2] noreturn:[ImVec2]
UpdateWorkRect call:[CalcWorkRectPos,CalcWorkRectSize] noreturn:[CalcWorkRectSize]
GetMainRect call:[ImRect] noreturn:[ImRect]
GetWorkRect call:[ImRect] noreturn:[ImRect]
GetBuildWorkRect call:[CalcWorkRectPos,CalcWorkRectSize,ImRect] noreturn:[ImRect]
ImGuiWindowSettings call:[memset,sizeof]
GetName call:[return]
ImGuiSettingsHandler call:[memset,sizeof] noreturn:[memset]
ImGuiMetricsConfig
ImGuiStackLevelInfo call:[memset,sizeof] noreturn:[memset]
ImGuiStackTool call:[memset,sizeof]
ImGuiContextHook call:[memset,sizeof] noreturn:[memset]
ImGuiContext call:[ImFontAtlas,ImNewWrapper,ImVec2,MemAlloc,memset,new,sizeof]
Rect call:[ImRect] noreturn:[ImRect]
CalcFontSize global:[GImGui]
TitleBarHeight global:[GImGui] call:[CalcFontSize,return]
TitleBarRect call:[ImRect,ImVec2,TitleBarHeight] noreturn:[ImRect]
MenuBarHeight global:[GImGui] call:[CalcFontSize,return]
MenuBarRect call:[ImRect,MenuBarHeight,TitleBarHeight] noreturn:[ImRect]
ImGuiTabItem call:[memset,sizeof]
GetTabOrder call:[index_from_ptr] noreturn:[index_from_ptr]
GetTabName call:[assert]
ImGuiTableColumn call:[memset,sizeof]
ImGuiTableInstanceData
ImGuiTable call:[memset,sizeof]
ImGuiTable call:[MemFree] noreturn:[MemFree]
ImGuiTableTempData call:[memset,sizeof]
ImGuiTableColumnSettings
ImGuiTableSettings call:[memset,sizeof] noreturn:[memset]
GetColumnSettings call:[return]
GetCurrentWindowRead global:[GImGui]
GetCurrentWindow global:[GImGui]
WindowRectAbsToRel call:[ImRect] noreturn:[ImRect]
WindowRectRelToAbs call:[ImRect] noreturn:[ImRect]
GetDefaultFont global:[GImGui]
GetForegroundDrawList call:[GetForegroundDrawList] noreturn:[GetForegroundDrawList]
ScrollToBringRectIntoView call:[ScrollToRect] noreturn:[ScrollToRect]
GetItemID global:[GImGui]
GetItemStatusFlags global:[GImGui]
GetItemFlags global:[GImGui]
GetActiveID global:[GImGui]
GetFocusID global:[GImGui]
ItemSize call:[GetSize,ItemSize] noreturn:[ItemSize]
IsNamedKey
IsNamedKeyOrModKey call:[return]
IsLegacyKey
IsGamepadKey
IsAliasKey
ConvertSingleModFlagToKey
MouseButtonToKey call:[assert,return]
IsActiveIdUsingNavDir global:[GImGui] call:[return]
GetKeyOwnerData global:[GImGui] call:[ConvertSingleModFlagToKey,IsNamedKey,assert] noreturn:[ConvertSingleModFlagToKey]
DockNodeGetRootNode
DockNodeIsInHierarchyOf
DockNodeGetDepth
DockNodeGetWindowMenuButtonId call:[ImHashStr] noreturn:[ImHashStr]
GetWindowDockNode global:[GImGui]
DockBuilderGetCentralNode call:[DockBuilderGetNode,DockNodeGetRootNode]
GetCurrentFocusScope global:[GImGui]
GetCurrentTable global:[GImGui]
TableGetInstanceData
TempInputIsActive global:[GImGui] call:[return] noreturn:[return]
GetInputTextState global:[GImGui] call:[return]
DebugDrawItemRect global:[GImGui] call:[AddRect,GetForegroundDrawList] noreturn:[AddRect]
DebugStartItemPicker global:[GImGui]
SetItemUsingMouseWheel call:[SetItemKeyOwner] noreturn:[SetItemKeyOwner]
TreeNodeBehaviorIsOpen call:[TreeNodeUpdateNextOpen] noreturn:[TreeNodeUpdateNextOpen]
FocusableItemRegister call:[assert]
FocusableItemUnregister call:[assert]
IsKeyPressedMap call:[IsKeyPressed,IsNamedKey,assert] noreturn:[IsKeyPressed]
MallocWrapper call:[malloc] noreturn:[malloc]
FreeWrapper call:[free] noreturn:[free]
ImGuiIO call:[ImVec2,memset,sizeof,static_assert]
AddInputCharacter global:[GImGui] call:[assert,push_back] noreturn:[push_back]
AddInputCharacterUTF16 call:[AddInputCharacter] noreturn:[AddInputCharacter]
AddInputCharactersUTF8 call:[AddInputCharacter,ImTextCharFromUtf8] noreturn:[AddInputCharacter]
ClearInputCharacters call:[resize] noreturn:[resize]
ClearInputKeys call:[ImVec2,memset,sizeof]
FindLatestInputEvent global:[GImGui]
AddKeyAnalogEvent global:[GImGui] call:[FindLatestInputEvent,GetKeyData,IsAliasKey,IsGamepadKey,IsNamedKeyOrModKey,assert,push_back] noreturn:[assert,push_back]
AddKeyEvent call:[AddKeyAnalogEvent] noreturn:[AddKeyAnalogEvent]
SetKeyEventNativeData call:[IsLegacyKey,IsNamedKey,assert]
SetAppAcceptingEvents
AddMousePosEvent global:[GImGui] call:[FindLatestInputEvent,ImFloorSigned,ImVec2,assert,pos,push_back] noreturn:[push_back]
AddMouseButtonEvent global:[GImGui] call:[FindLatestInputEvent,assert,push_back] noreturn:[push_back]
AddMouseWheelEvent global:[GImGui] call:[assert,push_back] noreturn:[push_back]
AddMouseViewportEvent global:[GImGui] call:[FindLatestInputEvent,assert,push_back] noreturn:[push_back]
AddFocusEvent global:[GImGui] call:[FindLatestInputEvent,assert,push_back] noreturn:[push_back]
ImBezierCubicClosestPoint call:[ImBezierCubicCalc,ImLengthSqr,ImLineClosestPoint,assert]
ImBezierCubicClosestPointCasteljauStep call:[ImBezierCubicClosestPointCasteljauStep,ImLengthSqr,ImLineClosestPoint,p_current] noreturn:[ImBezierCubicClosestPointCasteljauStep]
ImBezierCubicClosestPointCasteljau call:[ImBezierCubicClosestPointCasteljauStep,assert]
ImLineClosestPoint
ImTriangleContainsPoint call:[return] noreturn:[return]
ImTriangleBarycentricCoords
ImTriangleClosestPoint call:[ImLengthSqr,ImLineClosestPoint,ImMin]
ImStricmp call:[ImToUpper]
ImStrnicmp call:[ImToUpper]
ImStrncpy call:[strncpy] noreturn:[strncpy]
ImStrdup call:[MemAlloc,memcpy,return,strlen] noreturn:[memcpy]
ImStrdupcpy call:[MemAlloc,MemFree,memcpy,return,strlen] noreturn:[memcpy]
ImStrchrRange call:[memchr]
ImStrlenW
ImStreolRange call:[memchr]
ImStrbolW
ImStristr call:[ImToUpper,strlen] noreturn:[strlen]
ImStrTrimBlanks call:[memmove] noreturn:[memmove]
ImStrSkipBlank
ImFormatString call:[_vsnprintf,va_end,va_start]
ImFormatStringV call:[_vsnprintf]
ImFormatStringToTempBuffer global:[GImGui] call:[ImFormatStringV,va_end,va_start] noreturn:[va_end]
ImFormatStringToTempBufferV global:[GImGui] call:[ImFormatStringV]
ImHashData global:[GCrc32LookupTable]
ImHashStr global:[GCrc32LookupTable]
ImFileOpen call:[MultiByteToWideChar,_wfopen,resize] noreturn:[_wfopen]
ImFileClose call:[fclose]
ImFileGetSize call:[fseek,ftell,return]
ImFileRead call:[fread] noreturn:[fread]
ImFileWrite call:[fwrite] noreturn:[fwrite]
ImFileLoadToMemory call:[ImFileClose,ImFileGetSize,ImFileOpen,ImFileRead,MemAlloc,MemFree,assert,memset] noreturn:[memset]
ImTextCharFromUtf8 call:[ImMin]
ImTextStrFromUtf8 call:[ImTextCharFromUtf8,return]
ImTextCountCharsFromUtf8 call:[ImTextCharFromUtf8]
ImTextCharToUtf8_inline
ImTextCharToUtf8 call:[ImTextCharToUtf8_inline]
ImTextCountUtf8BytesFromChar call:[ImTextCharFromUtf8] noreturn:[ImTextCharFromUtf8]
ImTextCountUtf8BytesFromChar
ImTextStrToUtf8 call:[ImTextCharToUtf8_inline,return] noreturn:[ImTextCharToUtf8_inline]
ImTextCountUtf8BytesFromStr call:[ImTextCountUtf8BytesFromChar] noreturn:[ImTextCountUtf8BytesFromChar]
ImAlphaBlendColors call:[ImLerp,return] noreturn:[return]
LowerBound
BuildSortByKey call:[ImQsort,sizeof] noreturn:[ImQsort]
PairComparerByID
GetInt call:[LowerBound,end]
GetBool call:[GetInt]
GetFloat call:[LowerBound,end]
GetVoidPtr call:[LowerBound,end]
GetIntRef call:[ImGuiStoragePair,LowerBound,end,insert] noreturn:[insert]
GetBoolRef call:[GetIntRef,return] noreturn:[GetIntRef]
GetFloatRef call:[ImGuiStoragePair,LowerBound,end,insert] noreturn:[insert]
GetVoidPtrRef call:[ImGuiStoragePair,LowerBound,end,insert] noreturn:[insert]
SetInt call:[ImGuiStoragePair,LowerBound,end,insert]
SetBool call:[SetInt] noreturn:[SetInt]
SetFloat call:[ImGuiStoragePair,LowerBound,end,insert]
SetVoidPtr call:[ImGuiStoragePair,LowerBound,end,insert]
SetAllInt
ImGuiTextFilter call:[Build,ImStrncpy,sizeof] noreturn:[Build]
Draw call:[Build,InputText,SetNextItemWidth,sizeof] noreturn:[Build,SetNextItemWidth]
split call:[ImGuiTextRange,push_back,resize] noreturn:[push_back]
Build call:[ImCharIsBlankA,empty,input_range,resize,split,strlen]
PassFilter call:[ImStristr,empty]
append call:[memcpy,reserve,resize,strlen] noreturn:[reserve]
appendf call:[appendfv,va_end,va_start] noreturn:[va_end]
appendfv call:[ImFormatStringV,reserve,resize,va_end] noreturn:[reserve,va_end]
append call:[ImMax,assert,memchr,push_back] noreturn:[ImMax,push_back]
GetSkipItemForListClipping global:[GImGui] call:[return] noreturn:[return]
CalcListClipping global:[GImGui] call:[Add,GetSkipItemForListClipping,ImClamp,WindowRectRelToAbs] noreturn:[Add]
ImGuiListClipper_SortAndFuseRanges call:[ImMax,ImMin,ImSwap,assert,erase] noreturn:[ImSwap]
ImGuiListClipper_SeekCursorAndSetupPrevLine global:[GImGui] call:[ImMax,TableEndRow] noreturn:[TableEndRow]
ImGuiListClipper_SeekCursorForItem call:[ImGuiListClipper_SeekCursorAndSetupPrevLine] noreturn:[ImGuiListClipper_SeekCursorAndSetupPrevLine]
ImGuiListClipper call:[memset,sizeof]
ImGuiListClipper call:[End] noreturn:[End]
Begin global:[GImGui] call:[DebugLog,ImGuiListClipperData,Reset,TableEndRow,resize,while] noreturn:[DebugLog,TableEndRow,resize]
End global:[GImGui] call:[DebugLog,ImGuiListClipper_SeekCursorForItem,assert,while] noreturn:[DebugLog,ImGuiListClipper_SeekCursorForItem]
ForceDisplayRangeByIndices call:[FromIndices,assert,push_back] noreturn:[push_back]
ImGuiListClipper_StepInternal global:[GImGui] call:[FromIndices,FromPositions,GetSkipItemForListClipping,ImClamp,ImGuiListClipper_SeekCursorForItem,ImGuiListClipper_SortAndFuseRanges,ImIsFloatAboveGuaranteedIntegerPrecision,ImMax,ImMin,TableEndRow,WindowRectRelToAbs,assert,push_back,push_front] noreturn:[ImGuiListClipper_SeekCursorForItem,ImGuiListClipper_SortAndFuseRanges,TableEndRow,assert,push_back]
Step global:[GImGui] call:[DebugLog,End,ImGuiListClipper_StepInternal,while] noreturn:[DebugLog,End,while]
GetVarPtr call:[return]
GetStyleVarInfo global:[GStyleVarInfo] call:[assert,sizeof]
FindRenderedTextEnd
RenderText global:[GImGui] call:[AddText,FindRenderedTextEnd,GetColorU32,LogRenderedText,strlen] noreturn:[FindRenderedTextEnd,LogRenderedText,strlen]
RenderTextWrapped global:[GImGui] call:[AddText,GetColorU32,LogRenderedText,strlen] noreturn:[LogRenderedText,strlen]
RenderTextClippedEx call:[AddText,CalcTextSize,GetColorU32,ImMax,fine_clip_rect] noreturn:[AddText,ImMax]
RenderTextClipped global:[GImGui] call:[FindRenderedTextEnd,LogRenderedText,RenderTextClippedEx] noreturn:[LogRenderedText]
RenderTextEllipsis global:[GImGui] call:[CalcTextSize,CalcTextSizeA,FindGlyph,FindRenderedTextEnd,GetColorU32,ImCharIsBlankA,ImMax,ImTextCountUtf8BytesFromChar,ImVec2,LogRenderedText,RenderChar,RenderTextClippedEx] noreturn:[FindRenderedTextEnd,LogRenderedText,RenderTextClippedEx]
RenderFrame global:[GImGui] call:[AddRect,AddRectFilled,GetColorU32,ImVec2] noreturn:[AddRect]
RenderFrameBorder global:[GImGui] call:[AddRect,GetColorU32,ImVec2] noreturn:[AddRect]
RenderNavHighlight global:[GImGui] call:[AddRect,ClipWith,Contains,Expand,GetColorU32,ImVec2,PopClipRect,PushClipRect] noreturn:[AddRect,PopClipRect,PushClipRect]
RenderMouseCursor global:[GImGui] call:[AddImage,GetForegroundDrawList,GetMainRect,GetMouseCursorTexData,ImRect,ImVec2,Overlaps,PopTextureID,PushTextureID,assert] noreturn:[PopTextureID]
ImGuiWindow call:[GetID,ImGuiWindowClass,ImHashStr,ImNewWrapper,ImStrdup,ImVec2,memset,new,push_back,sizeof,strlen] noreturn:[ImGuiWindowClass]
ImGuiWindow call:[IM_DELETE,assert,clear_destruct] noreturn:[clear_destruct]
GetID global:[GImGui] call:[DebugHookIdInfo,ImHashStr,back] noreturn:[DebugHookIdInfo]
GetID global:[GImGui] call:[DebugHookIdInfo,ImHashData,back,sizeof] noreturn:[DebugHookIdInfo]
GetID global:[GImGui] call:[DebugHookIdInfo,ImHashData,back,sizeof] noreturn:[DebugHookIdInfo]
GetIDFromRectangle call:[ImHashData,WindowRectAbsToRel,back,sizeof]
SetCurrentWindow global:[GImGui] call:[CalcFontSize,GetByIndex] noreturn:[CalcFontSize]
GcCompactTransientMiscBuffers global:[GImGui] call:[TableGcCompactSettings,clear] noreturn:[TableGcCompactSettings]
GcCompactTransientWindowBuffers call:[_ClearFreeMemory,clear] noreturn:[clear]
GcAwakeTransientWindowBuffers call:[reserve]
SetActiveID global:[GImGui] call:[DebugLog,while] noreturn:[DebugLog]
ClearActiveID call:[SetActiveID] noreturn:[SetActiveID]
SetHoveredID global:[GImGui]
GetHoveredID global:[GImGui]
KeepAliveID global:[GImGui]
MarkItemEdited global:[GImGui] call:[assert]
IsWindowContentHoverable global:[GImGui] call:[IsWindowWithinBeginStackOf]
ItemHoverable global:[GImGui] call:[AddRect,ClearActiveID,GetForegroundDrawList,IsMouseHoveringRect,IsWindowContentHoverable,SetHoveredID,__debugbreak] noreturn:[AddRect,ClearActiveID,SetHoveredID,__debugbreak]
IsClippedEx global:[GImGui] call:[Overlaps]
SetLastItemData global:[GImGui]
CalcWrapWidthForPos global:[GImGui] call:[ImMax] noreturn:[ImMax]
AddContextHook call:[assert,back,push_back]
RemoveContextHook call:[assert]
CallContextHooks call:[Callback] noreturn:[Callback]
GetViewportDrawList global:[GImGui] call:[ImDrawList,ImNewWrapper,MemAlloc,PushClipRect,PushTextureID,_ResetForNewFrame,assert,new,sizeof]
StartMouseMovingWindow global:[GImGui] call:[FocusWindow,SetActiveID,SetActiveIdUsingAllKeyboardKeys]
StartMouseMovingWindowOrNode global:[GImGui] call:[DockContextQueueUndockNode,DockNodeGetRootNode,IsDockSpace,IsMouseClicked,IsMouseDragging,StartMouseMovingWindow] noreturn:[DockContextQueueUndockNode,StartMouseMovingWindow]
UpdateMouseMovingWindowNewFrame global:[GImGui] call:[ClearActiveID,FocusWindow,IsDragDropPayloadBeingAccepted,IsMousePosValid,KeepAliveID,SetWindowPos,UpdateTryMergeWindowIntoHostViewport,UpdateWorkRect,assert] noreturn:[ClearActiveID,FocusWindow,UpdateTryMergeWindowIntoHostViewport,UpdateWorkRect]
UpdateMouseMovingWindowEndFrame global:[GImGui] call:[ClosePopupsOverWindow,Contains,FocusWindow,GetTopMostPopupModal,IsPopupOpen,IsWindowAbove,StartMouseMovingWindow,TitleBarRect] noreturn:[ClosePopupsOverWindow,FocusWindow]
TranslateWindow call:[Translate]
ScaleWindow call:[ImFloor] noreturn:[ImFloor]
IsWindowActiveAndVisible call:[return]
UpdateAliasKey call:[GetKeyData,IsAliasKey,assert]
UpdateKeyRoutingTable global:[GImGui] call:[GetKeyOwnerData,push_back,resize,swap] noreturn:[swap]
GetMergedModsFromBools global:[GImGui]
UpdateKeyboardInputs global:[GImGui] call:[GetKeyData,GetMergedModsFromBools,ImMax,IsKeyDown,IsLegacyKey,IsNamedKey,MouseButtonToKey,UpdateAliasKey,UpdateKeyRoutingTable,assert,while] noreturn:[ImMax,UpdateAliasKey,UpdateKeyRoutingTable,assert,while]
UpdateMouseInputs global:[GImGui] call:[ImFloorSigned,ImLengthSqr,ImMax,ImVec2,IsMousePosValid,sizeof] noreturn:[ImFloorSigned,ImMax,ImVec2]
LockWheelingWindow global:[GImGui,WINDOWS_MOUSE_WHEEL_SCROLL_LOCK_TIMER] call:[DebugLog,ImAbs,ImMin,while] noreturn:[DebugLog,ImMin]
UpdateMouseWheel global:[GImGui] call:[CalcFontSize,GetHeight,GetWidth,ImClamp,ImFloor,ImLengthSqr,ImMin,IsMousePosValid,LockWheelingWindow,SetScrollX,SetScrollY,SetWindowPos,TestKeyOwner] noreturn:[ImFloor,LockWheelingWindow,SetScrollX,SetScrollY]
UpdateHoveredWindowAndCaptureFlags global:[GImGui,WINDOWS_HOVER_PADDING] call:[FindHoveredWindow,GetTopMostPopupModal,ImMax,ImVec2,IsWindowWithinBeginStackOf,assert,sizeof]
Initialize global:[GImGui] call:[AddSettingsHandler,DockContextInitialize,ImGuiViewportP,ImHashStr,ImNewWrapper,MemAlloc,TableSettingsAddSettingsHandler,assert,new,push_back,resize,sizeof] noreturn:[AddSettingsHandler]
Shutdown global:[GImGui] call:[CallContextHooks,Clear,ClearFreeMemory,DestroyPlatformWindows,DockContextShutdown,IM_DELETE,ImFileClose,SaveIniSettingsToDisk,clear,clear_delete,clear_destruct] noreturn:[IM_DELETE,ImFileClose,SaveIniSettingsToDisk]
ChildWindowComparer call:[return] noreturn:[return]
AddWindowToSortBuffer call:[AddWindowToSortBuffer,ImQsort,push_back,sizeof] noreturn:[AddWindowToSortBuffer]
AddDrawListToDrawData call:[assert,push_back,sizeof] noreturn:[assert,push_back]
AddWindowToDrawData global:[GImGui] call:[AddDrawListToDrawData,AddWindowToDrawData,ChannelsMerge,IsWindowActiveAndVisible] noreturn:[AddWindowToDrawData,ChannelsMerge]
GetWindowDisplayLayer call:[return]
AddRootWindowToDrawData call:[AddWindowToDrawData,GetWindowDisplayLayer] noreturn:[AddWindowToDrawData]
FlattenIntoSingleLayer call:[empty,memcpy,resize,sizeof] noreturn:[resize]
SetupViewportDrawData call:[GetIO,ImVec2,_PopUnusedDrawCmd]
FindFrontMostVisibleChildWindow call:[FindFrontMostVisibleChildWindow,IsWindowActiveAndVisible] noreturn:[FindFrontMostVisibleChildWindow]
RenderDimmedBackgroundBehindWindow call:[AddDrawCmd,AddRectFilled,FindFrontMostVisibleChildWindow,GetMainRect,ImVec2,PopClipRect,PushClipRect,Rect,RenderRectFilledWithHole,assert,back,pop_back,push_front] noreturn:[AddDrawCmd,PopClipRect]
FindBottomMostVisibleWindowWithinBeginStack global:[GImGui] call:[FindWindowDisplayIndex,GetWindowDisplayLayer,IsWindowActiveAndVisible,IsWindowWithinBeginStackOf]
RenderDimmedBackgrounds global:[GImGui] call:[AddDrawCmd,AddRect,AddRectFilled,Expand,FindBottomMostVisibleWindowWithinBeginStack,GetColorU32,GetForegroundDrawList,GetHeight,GetTopMostAndVisiblePopupModal,GetWidth,IsWindowAbove,PopClipRect,PushClipRect,Rect,RenderDimmedBackgroundBehindWindow] noreturn:[AddDrawCmd,AddRectFilled,Expand,PopClipRect,RenderDimmedBackgroundBehindWindow]
FindHoveredWindow global:[GImGui] call:[Contains,Expand,ImRect,__pragma,assert,bb,hole_pos,hole_size,warning] noreturn:[Expand]
IsItemToggledSelection global:[GImGui] call:[return]
SetActiveIdUsingAllKeyboardKeys global:[GImGui] call:[NavMoveRequestCancel,assert] noreturn:[NavMoveRequestCancel]
BeginChildEx global:[GImGui] call:[Begin,FocusWindow,GetContentRegionAvail,ImFloor,ImFormatStringToTempBuffer,ImMax,NavInitWindow,SetActiveID,SetNextWindowSize] noreturn:[ImFormatStringToTempBuffer,ImMax]
SetWindowConditionAllowFlags
FindWindowByID global:[GImGui] call:[GetVoidPtr,return] noreturn:[GetVoidPtr]
FindWindowByName call:[FindWindowByID,ImHashStr] noreturn:[FindWindowByID]
ApplyWindowSettings call:[GetMainViewport,ImFloor,ImVec2] noreturn:[ImFloor,ImVec2]
UpdateWindowInFocusOrderList global:[GImGui] call:[assert,contains,erase,push_back]
CreateNewWindow global:[GImGui] call:[ApplyWindowSettings,FindWindowSettings,GetMainViewport,ImGuiWindow,ImNewWrapper,ImVec2,MemAlloc,SetVoidPtr,SetWindowConditionAllowFlags,new,offset_from_ptr,push_back,push_front,sizeof] noreturn:[ApplyWindowSettings,push_back,push_front]
GetWindowForTitleDisplay
GetWindowForTitleAndMenuHeight call:[return]
CalcWindowSizeAfterConstraint global:[GImGui] call:[GetWindowForTitleAndMenuHeight,ImClamp,ImMax,MenuBarHeight,SizeCallback,TitleBarHeight] noreturn:[ImMax]
CalcWindowContentSizes call:[ImMax]
CalcWindowAutoFitSize global:[GImGui] call:[CalcWindowSizeAfterConstraint,ImClamp,ImMax,ImMin,ImVec2,MenuBarHeight,TitleBarHeight] noreturn:[ImMin,ImVec2]
CalcWindowNextAutoFitSize call:[CalcWindowAutoFitSize,CalcWindowContentSizes,CalcWindowSizeAfterConstraint]
GetWindowBgColorIdx
CalcResizePosSizeFromAnyCorner call:[CalcWindowSizeAfterConstraint,ImLerp]
GetResizeBorderRect call:[ImRect,ImVec2,Rect,assert] noreturn:[ImRect,ImVec2]
GetWindowResizeCornerID call:[ImHashData,ImHashStr,assert,sizeof]
GetWindowResizeBorderID call:[ImHashData,ImHashStr,assert,sizeof]
UpdateWindowManualResize global:[GImGui,WINDOWS_HOVER_PADDING,WINDOWS_RESIZE_FROM_EDGES_FEEDBACK_TIMER,resize_border_def,resize_grip_def] call:[ButtonBehavior,CalcResizePosSizeFromAnyCorner,CalcWindowSizeAfterConstraint,ClearActiveID,GetColorU32,GetID,GetKeyVector2d,GetMainRect,GetResizeBorderRect,ImClamp,ImFloor,ImLerp,ImMax,ImMin,ImSwap,ImVec2,ItemAdd,MarkIniSettingsDirty,PopID,PushID,clamp_max,clamp_min,pos_target,resize_rect,size_target] noreturn:[CalcResizePosSizeFromAnyCorner,ClearActiveID,GetColorU32,GetKeyVector2d,GetMainRect,ImSwap,MarkIniSettingsDirty]
ClampWindowPos global:[GImGui] call:[GetFrameHeight,ImClamp] noreturn:[GetFrameHeight,ImClamp]
RenderWindowOuterBorders global:[GImGui,resize_border_def] call:[AddLine,AddRect,GetColorU32,GetResizeBorderRect,ImLerp,ImMax,ImVec2,PathArcTo,PathStroke,TitleBarHeight] noreturn:[AddLine,AddRect,PathStroke]
RenderWindowDecorations global:[DOCKING_TRANSPARENT_PAYLOAD_ALPHA,GImGui,resize_grip_def] call:[AddLine,AddRectFilled,AddTriangleFilled,ButtonBehavior,ChannelsSetCurrent,ClipWith,GetBL,GetBR,GetColorU32,GetID,GetWindowBgColorIdx,ImFloor,ImLerp,ImSaturate,ImVec2,IsDataType,IsHiddenTabBar,IsMouseDragging,IsNoTabBar,KeepAliveID,MenuBarRect,PathArcToFast,PathFillConvex,PathLineTo,Rect,RenderFrame,RenderWindowOuterBorders,Scrollbar,StartMouseMovingWindowOrNode,TitleBarHeight,assert,r] noreturn:[AddLine,AddRectFilled,AddTriangleFilled,ChannelsSetCurrent,PathFillConvex,RenderWindowOuterBorders,Scrollbar,StartMouseMovingWindowOrNode]
RenderWindowTitleBarContents global:[GImGui] call:[CalcTextSize,CloseButton,CollapseButton,GetColorU32,GetID,GetWidth,ImClamp,ImMax,ImMin,ImSaturate,ImVec2,RenderBullet,RenderTextClipped,clip_r,fabsf,layout_r] noreturn:[ImMax,ImMin,ImVec2,RenderTextClipped]
UpdateWindowParentAndRootLinks call:[assert]
FindBlockingModal global:[GImGui] call:[IsWindowWithinBeginStackOf]
BringWindowToFocusFront global:[GImGui] call:[assert,back] noreturn:[assert]
BringWindowToDisplayFront global:[GImGui] call:[back,memmove,sizeof]
BringWindowToDisplayBack global:[GImGui] call:[memmove,sizeof]
BringWindowToDisplayBehind global:[GImGui] call:[FindWindowDisplayIndex,assert,memmove,sizeof]
FindWindowDisplayIndex global:[GImGui] call:[find,index_from_ptr] noreturn:[index_from_ptr]
FocusWindow global:[GImGui] call:[BringWindowToDisplayFront,BringWindowToFocusFront,ClearActiveID,ClosePopupsOverWindow,SetNavWindow,assert] noreturn:[BringWindowToDisplayFront,ClearActiveID,ClosePopupsOverWindow]
FocusTopMostWindowUnderOne global:[GImGui] call:[FindWindowFocusIndex,FocusWindow,NavRestoreLastChildNavWindow,assert] noreturn:[FocusWindow]
SetCurrentFont global:[GImGui] call:[CalcFontSize,ImMax,IsLoaded,assert]
PushItemFlag global:[GImGui] call:[assert,back,push_back] noreturn:[push_back]
PopItemFlag global:[GImGui] call:[assert,back,pop_back] noreturn:[back]
GetCombinedRootWindow
IsWindowChildOf call:[GetCombinedRootWindow]
IsWindowWithinBeginStackOf
IsWindowAbove global:[GImGui] call:[GetWindowDisplayLayer]
IsWindowNavFocusable
SetWindowPos call:[ImFloor,ImIsPowerOfTwo,ImVec2,MarkIniSettingsDirty,assert]
SetWindowSize call:[ImIsPowerOfTwo,MarkIniSettingsDirty,assert] noreturn:[MarkIniSettingsDirty]
SetWindowCollapsed
SetWindowHitTestHole call:[ImVec2ih,assert] noreturn:[ImVec2ih]
ActivateItem global:[GImGui]
PushFocusScope global:[GImGui] call:[push_back]
PopFocusScope global:[GImGui] call:[assert,back,pop_back]
PushOverrideID global:[GImGui] call:[DebugHookIdInfo,push_back] noreturn:[DebugHookIdInfo,push_back]
GetIDWithSeed global:[GImGui] call:[DebugHookIdInfo,ImHashStr] noreturn:[DebugHookIdInfo]
GetKeyData global:[GImGui] call:[ConvertSingleModFlagToKey,IsLegacyKey,assert] noreturn:[ConvertSingleModFlagToKey]
GetKeyIndex global:[GImGui] call:[GetKeyData,IsNamedKey,assert,return]
GetKeyChordName global:[GImGui] call:[GetKeyName,ImFormatString] noreturn:[ImFormatString]
CalcTypematicRepeatAmount call:[return]
GetTypematicRepeatRate global:[GImGui]
GetKeyVector2d call:[GetKeyData,ImVec2] noreturn:[ImVec2]
GetRoutingIdFromOwnerId global:[GImGui] call:[return]
GetShortcutRoutingData global:[GImGui] call:[ConvertSingleModFlagToKey,ImGuiKeyRoutingData,IsNamedKey,assert,push_back] noreturn:[ConvertSingleModFlagToKey]
CalcRoutingScore global:[GImGui] call:[assert]
SetShortcutRouting global:[GImGui] call:[CalcRoutingScore,GetRoutingIdFromOwnerId,GetShortcutRoutingData,ImIsPowerOfTwo,assert] noreturn:[assert]
TestShortcutRouting call:[GetRoutingIdFromOwnerId,GetShortcutRoutingData]
IsKeyDown call:[GetKeyData,TestKeyOwner]
IsKeyPressed call:[GetKeyData,GetKeyPressedAmount,GetTypematicRepeatRate,TestKeyOwner,assert]
IsKeyReleased call:[GetKeyData,TestKeyOwner]
IsMouseDown global:[GImGui] call:[MouseButtonToKey,TestKeyOwner,assert,sizeof] noreturn:[TestKeyOwner]
IsMouseClicked global:[GImGui] call:[CalcTypematicRepeatAmount,MouseButtonToKey,TestKeyOwner,assert,sizeof]
IsMouseReleased global:[GImGui] call:[MouseButtonToKey,TestKeyOwner,assert,sizeof] noreturn:[TestKeyOwner]
IsMouseDragPastThreshold global:[GImGui] call:[assert,sizeof]
GetInputSourceName call:[assert,sizeof]
DebugPrintInputEvent global:[GImGui] call:[DebugLog,GetKeyName,while] noreturn:[DebugLog,while]
UpdateInputEvents global:[GImGui] call:[ClearInputKeys,DebugPrintInputEvent,GetKeyData,GetMergedModsFromBools,SetBit,TestBit,assert,erase,event_pos,push_back,resize] noreturn:[ClearInputKeys,DebugPrintInputEvent,GetMergedModsFromBools,assert,erase,push_back,resize]
GetKeyOwner global:[GImGui] call:[GetKeyOwnerData,IsNamedKeyOrModKey,return] noreturn:[return]
TestKeyOwner global:[GImGui] call:[GetKeyOwnerData,IsNamedKeyOrModKey,return] noreturn:[return]
SetKeyOwner call:[GetKeyOwnerData,IsNamedKeyOrModKey,assert]
SetItemKeyOwner global:[GImGui] call:[SetKeyOwner,assert] noreturn:[SetKeyOwner]
Shortcut global:[GImGui] call:[ConvertSingleModFlagToKey,IsKeyPressed,SetShortcutRouting,assert] noreturn:[ConvertSingleModFlagToKey]
ErrorCheckUsingSetCursorPosToExtendParentBoundaries global:[GImGui] call:[ImMax,assert] noreturn:[ImMax]
ErrorCheckNewFrameSanityChecks global:[GImGui] call:[Contains,ImRect,IsBuilt,assert] noreturn:[assert]
ErrorCheckEndFrameSanityChecks global:[GImGui] call:[End,GetMergedModsFromBools,assert] noreturn:[End,assert]
ErrorCheckEndFrameRecover global:[GImGui] call:[End,EndChild,ErrorCheckEndWindowRecover,assert,log_callback] noreturn:[End,EndChild,log_callback]
ErrorCheckEndWindowRecover global:[GImGui] call:[EndDisabled,EndGroup,EndTabBar,EndTable,GetStyleColorName,PopFocusScope,PopID,PopItemFlag,PopStyleColor,PopStyleVar,TreePop,assert,back,log_callback] noreturn:[EndDisabled,EndGroup,EndTabBar,EndTable,PopFocusScope,PopID,PopItemFlag,PopStyleColor,PopStyleVar,TreePop,log_callback]
SetToCurrentState global:[GImGui]
CompareWithCurrentState global:[GImGui] call:[assert] noreturn:[assert]
ItemSize global:[GImGui] call:[ImMax,SameLine] noreturn:[SameLine]
ItemAdd global:[GImGui] call:[DebugLocateItemResolveWithLastItem,IsMouseHoveringRect,KeepAliveID,NavProcessItem,Overlaps,assert] noreturn:[DebugLocateItemResolveWithLastItem,NavProcessItem,assert]
PushMultiItemsWidths global:[GImGui] call:[ImMax,push_back] noreturn:[push_back]
CalcItemSize global:[GImGui] call:[GetContentRegionMaxAbs,ImMax] noreturn:[GetContentRegionMaxAbs,ImMax]
GetContentRegionMaxAbs global:[GImGui]
CalcScrollEdgeSnap call:[ImLerp] noreturn:[ImLerp]
CalcNextScrollFromScrollTargetAndClamp call:[CalcScrollEdgeSnap,ImMax,ImMin,MenuBarHeight,TitleBarHeight] noreturn:[CalcScrollEdgeSnap,ImMin]
ScrollToItem global:[GImGui] call:[ScrollToRectEx] noreturn:[ScrollToRectEx]
ScrollToRect call:[ScrollToRectEx] noreturn:[ScrollToRectEx]
ScrollToRectEx global:[GImGui] call:[CalcNextScrollFromScrollTargetAndClamp,GetHeight,GetWidth,ImFloor,ImIsPowerOfTwo,ImRect,ImVec2,ScrollToRectEx,SetScrollFromPosX,SetScrollFromPosY,assert,window_rect] noreturn:[ScrollToRectEx,SetScrollFromPosX,SetScrollFromPosY]
SetScrollX
SetScrollY
SetScrollFromPosX call:[assert]
SetScrollFromPosY call:[MenuBarHeight,TitleBarHeight,assert]
BeginTooltipEx global:[GImGui] call:[Begin,FindWindowByName,ImFormatString,ImVec2,SetNextWindowBgAlpha,SetNextWindowPos,sizeof] noreturn:[Begin,ImFormatString]
IsPopupOpen global:[GImGui] call:[assert]
GetTopMostPopupModal global:[GImGui]
GetTopMostAndVisiblePopupModal global:[GImGui] call:[IsWindowActiveAndVisible]
OpenPopupEx global:[GImGui] call:[ClosePopupToLevel,DebugLog,IsMousePosValid,IsPopupOpen,NavCalcPreferredRefPos,back,push_back,while] noreturn:[DebugLog,push_back]
ClosePopupsOverWindow global:[GImGui] call:[ClosePopupToLevel,DebugLog,IsWindowWithinBeginStackOf,assert,while] noreturn:[ClosePopupToLevel,DebugLog]
ClosePopupsExceptModals global:[GImGui] call:[ClosePopupToLevel] noreturn:[ClosePopupToLevel]
ClosePopupToLevel global:[GImGui] call:[DebugLog,FocusTopMostWindowUnderOne,FocusWindow,NavRestoreLastChildNavWindow,assert,resize,while] noreturn:[DebugLog,FocusTopMostWindowUnderOne,FocusWindow,NavRestoreLastChildNavWindow]
BeginPopupEx global:[GImGui] call:[Begin,ClearFlags,EndPopup,ImFormatString,IsPopupOpen,sizeof] noreturn:[EndPopup,ImFormatString]
FindBestWindowPosForPopupEx call:[Contains,ImClamp,ImMax,ImMin,ImRect,ImVec2] noreturn:[ImVec2]
GetPopupAllowedExtentRect global:[GImGui] call:[Expand,GetHeight,GetMainRect,GetWidth,ImVec2] noreturn:[GetMainRect]
FindBestWindowPosForPopup global:[GImGui] call:[FindBestWindowPosForPopupEx,GetPopupAllowedExtentRect,ImRect,NavCalcPreferredRefPos,assert] noreturn:[FindBestWindowPosForPopupEx,ImRect]
SetNavWindow global:[GImGui] call:[DebugLog,NavUpdateAnyRequestFlag,while] noreturn:[DebugLog,NavUpdateAnyRequestFlag]
SetNavID global:[GImGui] call:[assert]
SetFocusID global:[GImGui] call:[SetNavWindow,WindowRectAbsToRel,assert] noreturn:[SetNavWindow,WindowRectAbsToRel]
ImGetDirQuadrantFromDelta call:[fabsf,return]
NavScoreItemDistInterval
NavClampRectToVisibleAreaForMoveDir call:[ImClamp] noreturn:[ImClamp]
NavScoreItem global:[GImGui] call:[ClipWithFull,ImGetDirQuadrantFromDelta,ImLerp,NavClampRectToVisibleAreaForMoveDir,NavScoreItemDistInterval,Overlaps,assert,fabsf] noreturn:[ClipWithFull,ImGetDirQuadrantFromDelta]
NavApplyItemToResult global:[GImGui] call:[WindowRectAbsToRel] noreturn:[WindowRectAbsToRel]
NavProcessItem global:[GImGui] call:[ImClamp,NavApplyItemToResult,NavProcessItemForTabbingRequest,NavScoreItem,NavUpdateAnyRequestFlag,Overlaps,SetNavWindow,WindowRectAbsToRel] noreturn:[NavApplyItemToResult,NavProcessItemForTabbingRequest,NavUpdateAnyRequestFlag,SetNavWindow,WindowRectAbsToRel]
NavProcessItemForTabbingRequest global:[GImGui] call:[NavApplyItemToResult,NavMoveRequestResolveWithLastItem,NavUpdateAnyRequestFlag] noreturn:[NavApplyItemToResult,NavMoveRequestResolveWithLastItem,NavUpdateAnyRequestFlag]
NavMoveRequestButNoResultYet global:[GImGui]
NavMoveRequestSubmit global:[GImGui] call:[Clear,NavUpdateAnyRequestFlag,assert] noreturn:[NavUpdateAnyRequestFlag]
NavMoveRequestResolveWithLastItem global:[GImGui] call:[NavApplyItemToResult,NavUpdateAnyRequestFlag] noreturn:[NavUpdateAnyRequestFlag]
NavMoveRequestCancel global:[GImGui] call:[NavUpdateAnyRequestFlag] noreturn:[NavUpdateAnyRequestFlag]
NavMoveRequestForward global:[GImGui] call:[NavMoveRequestCancel,assert]
NavMoveRequestTryWrapping global:[GImGui] call:[assert]
NavSaveLastChildNavWindowIntoParent
NavRestoreLastChildNavWindow call:[TabBarFindMostRecentlySelectedTabForActiveWindow]
NavRestoreLayer global:[GImGui] call:[DebugLog,NavInitWindow,NavRestoreLastChildNavWindow,SetNavID,while] noreturn:[DebugLog,NavInitWindow,SetNavID,while]
NavRestoreHighlightAfterMove global:[GImGui]
NavUpdateAnyRequestFlag global:[GImGui] call:[assert] noreturn:[assert]
NavInitWindow global:[GImGui] call:[DebugLog,ImRect,NavUpdateAnyRequestFlag,SetNavID,assert,while] noreturn:[DebugLog,NavUpdateAnyRequestFlag]
NavCalcPreferredRefPos global:[GImGui] call:[CalcNextScrollFromScrollTargetAndClamp,GetHeight,GetWidth,ImClamp,ImFloor,ImMin,ImVec2,IsMousePosValid,Translate,WindowRectRelToAbs] noreturn:[ImFloor,ImVec2,Translate]
GetNavTweakPressedAmount global:[GImGui] call:[GetKeyPressedAmount,GetTypematicRepeatRate,IsKeyDown]
NavUpdate global:[GImGui] call:[CalcFontSize,GetKeyVector2d,ImFloor,IsKeyDown,IsKeyPressed,NavCalcPreferredRefPos,NavInitRequestApplyResult,NavMoveRequestApplyResult,NavSaveLastChildNavWindowIntoParent,NavUpdateAnyRequestFlag,NavUpdateCancelRequest,NavUpdateCreateMoveRequest,NavUpdateCreateTabbingRequest,NavUpdateWindowing,SetScrollX,SetScrollY,assert] noreturn:[NavInitRequestApplyResult,NavMoveRequestApplyResult,NavSaveLastChildNavWindowIntoParent,NavUpdateCreateTabbingRequest,SetScrollX,SetScrollY,assert]
NavInitRequestApplyResult global:[GImGui] call:[DebugLog,NavRestoreHighlightAfterMove,SetNavID,while] noreturn:[DebugLog,NavRestoreHighlightAfterMove]
NavUpdateCreateMoveRequest global:[GImGui] call:[Add,CalcFontSize,ClipWithFull,Contains,DebugLog,GetHeight,GetWidth,ImMin,ImRect,ImVec2,IsActiveIdUsingNavDir,IsInverted,IsKeyPressed,NavMoveRequestSubmit,NavUpdatePageUpPageDown,TranslateY,WindowRectAbsToRel,WindowRectRelToAbs,assert,while] noreturn:[Add,DebugLog,ImRect,NavMoveRequestSubmit,NavUpdatePageUpPageDown,TranslateY,assert,while]
NavUpdateCreateTabbingRequest global:[GImGui] call:[IsKeyPressed,NavMoveRequestSubmit,assert]
NavMoveRequestApplyResult global:[GImGui] call:[ClearActiveID,DebugLog,NavRestoreHighlightAfterMove,ScrollToRectEx,SetNavID,SetScrollY,WindowRectRelToAbs,assert,while] noreturn:[ClearActiveID,DebugLog,NavRestoreHighlightAfterMove,ScrollToRectEx,SetScrollY]
NavUpdateCancelRequest global:[GImGui] call:[ClearActiveID,ClosePopupToLevel,DebugLog,FocusWindow,IsKeyPressed,NavRestoreHighlightAfterMove,NavRestoreLayer,Rect,SetNavID,WindowRectAbsToRel,assert,back,while] noreturn:[ClearActiveID,ClosePopupToLevel,DebugLog,NavRestoreHighlightAfterMove]
NavUpdatePageUpPageDown global:[GImGui] call:[CalcFontSize,GetHeight,ImMax,IsInverted,IsKeyDown,IsKeyPressed,NavRestoreLayer,SetScrollY] noreturn:[NavRestoreLayer,SetScrollY]
NavEndFrame global:[GImGui] call:[NavMoveRequestButNoResultYet,NavUpdateCreateWrappingRequest,NavUpdateWindowingOverlay] noreturn:[NavUpdateCreateWrappingRequest,NavUpdateWindowingOverlay]
NavUpdateCreateWrappingRequest global:[GImGui] call:[GetHeight,GetWidth,NavMoveRequestForward,TranslateX,TranslateY] noreturn:[NavMoveRequestForward]
FindWindowFocusIndex global:[GImGui] call:[assert]
FindWindowNavFocusable global:[GImGui] call:[IsWindowNavFocusable]
NavUpdateWindowingHighlightWindow global:[GImGui] call:[FindWindowFocusIndex,FindWindowNavFocusable,ImVec2,assert] noreturn:[FindWindowNavFocusable,ImVec2]
NavUpdateWindowing global:[GImGui,NAV_WINDOWING_HIGHLIGHT_DELAY] call:[ClearActiveID,ClosePopupsOverWindow,FindWindowNavFocusable,FocusWindow,GetKeyVector2d,GetTopMostPopupModal,ImFloor,ImMax,ImMin,ImSaturate,ImVec2,IsKeyDown,IsKeyPressed,IsKeyReleased,IsMousePosValid,NavInitWindow,NavRestoreHighlightAfterMove,NavRestoreLastChildNavWindow,NavRestoreLayer,NavUpdateWindowingHighlightWindow,Platform_SetWindowFocus,SetWindowPos,Shortcut,TestKeyOwner,assert] noreturn:[GetKeyVector2d,NavInitWindow,NavRestoreHighlightAfterMove,NavUpdateWindowingHighlightWindow,Platform_SetWindowFocus]
GetFallbackWindowNameForWindowingList call:[strcmp]
NavUpdateWindowingOverlay global:[GImGui,NAV_WINDOWING_LIST_APPEAR_DELAY] call:[Begin,End,FindRenderedTextEnd,FindWindowByName,GetCenter,GetFallbackWindowNameForWindowingList,GetMainViewport,ImVec2,IsWindowNavFocusable,PopStyleVar,PushStyleVar,Selectable,SetNextWindowPos,SetNextWindowSizeConstraints,assert] noreturn:[FindWindowByName,GetFallbackWindowNameForWindowingList,PopStyleVar,Selectable]
IsDragDropActive global:[GImGui]
ClearDragDrop global:[GImGui] call:[Clear,clear,memset,sizeof] noreturn:[memset]
BeginDragDropTargetCustom global:[GImGui] call:[IsMouseHoveringRect,assert]
IsDragDropPayloadBeingAccepted global:[GImGui]
RenderDragDropTargetRect call:[AddRect,GetColorU32,GetWindowDrawList,ImVec2] noreturn:[AddRect]
LogTextV call:[ImFileWrite,appendfv,c_str,resize,size,sizeof] noreturn:[ImFileWrite,appendfv]
LogRenderedText global:[GImGui] call:[FindRenderedTextEnd,ImStreolRange,LogRenderedText,LogText,strlen] noreturn:[FindRenderedTextEnd,LogRenderedText]
LogBegin global:[GImGui] call:[assert,empty]
LogSetNextTextDecoration global:[GImGui]
LogToBuffer global:[GImGui] call:[LogBegin] noreturn:[LogBegin]
UpdateSettings global:[GImGui] call:[LoadIniSettingsFromDisk,SaveIniSettingsToDisk,assert,empty] noreturn:[LoadIniSettingsFromDisk,SaveIniSettingsToDisk]
MarkIniSettingsDirty global:[GImGui]
MarkIniSettingsDirty global:[GImGui]
CreateNewWindowSettings global:[GImGui] call:[GetName,ImGuiWindowSettings,ImHashStr,ImNewWrapper,alloc_chunk,memcpy,new,sizeof,strlen,strstr]
FindWindowSettings global:[GImGui] call:[begin,next_chunk]
FindOrCreateWindowSettings call:[CreateNewWindowSettings,FindWindowSettings,ImHashStr] noreturn:[CreateNewWindowSettings]
AddSettingsHandler global:[GImGui] call:[FindSettingsHandler,assert,push_back] noreturn:[push_back]
RemoveSettingsHandler global:[GImGui] call:[FindSettingsHandler,erase] noreturn:[erase]
FindSettingsHandler global:[GImGui] call:[ImHashStr]
ClearIniSettings global:[GImGui] call:[ClearAllFn,clear] noreturn:[ClearAllFn]
WindowSettingsHandler_ClearAll call:[clear] noreturn:[clear]
WindowSettingsHandler_ReadOpen call:[FindOrCreateWindowSettings,ImGuiWindowSettings,return]
WindowSettingsHandler_ReadLine call:[ImVec2ih,sscanf] noreturn:[ImVec2ih]
WindowSettingsHandler_ApplyAll call:[ApplyWindowSettings,FindWindowByID,begin,next_chunk] noreturn:[ApplyWindowSettings]
WindowSettingsHandler_WriteAll call:[CreateNewWindowSettings,FindWindowSettings,GetName,ImVec2ih,append,appendf,assert,begin,next_chunk,offset_from_ptr,ptr_from_offset,reserve,size] noreturn:[append,appendf,offset_from_ptr]
SetCurrentViewport global:[GImGui] call:[Platform_OnChangedViewport] noreturn:[Platform_OnChangedViewport]
SetWindowViewport call:[ImVec2] noreturn:[ImVec2]
GetWindowAlwaysWantOwnViewport global:[GImGui]
UpdateTryMergeWindowIntoHostViewport global:[GImGui] call:[BringWindowToDisplayFront,Contains,GetMainRect,GetWindowAlwaysWantOwnViewport,Overlaps,Rect,SetWindowViewport] noreturn:[SetWindowViewport]
UpdateTryMergeWindowIntoHostViewports global:[GImGui] call:[UpdateTryMergeWindowIntoHostViewport] noreturn:[UpdateTryMergeWindowIntoHostViewport]
TranslateWindowsInViewport global:[GImGui] call:[Contains,Rect,TranslateWindow,assert,test_still_fit_rect] noreturn:[TranslateWindow]
ScaleWindowsInViewport global:[GImGui] call:[ScaleWindow] noreturn:[ScaleWindow]
FindHoveredViewportFromPlatformWindowStack global:[GImGui] call:[Contains,GetMainRect]
UpdateViewportsNewFrame global:[GImGui] call:[AddUpdateViewport,DestroyViewport,FindHoveredViewportFromPlatformWindowStack,FindViewportByID,ImVec2,IsAnyMouseDown,Platform_GetWindowDpiScale,Platform_GetWindowMinimized,Platform_GetWindowPos,Platform_GetWindowSize,ScaleWindowsInViewport,TranslateWindowsInViewport,UpdateViewportPlatformMonitor,UpdateWorkRect,assert] noreturn:[FindHoveredViewportFromPlatformWindowStack,Platform_GetWindowDpiScale,Platform_GetWindowPos,Platform_GetWindowSize,ScaleWindowsInViewport,TranslateWindowsInViewport,assert]
UpdateViewportsEndFrame global:[GImGui] call:[ClearRequestFlags,IsWindowActiveAndVisible,assert,push_back,resize] noreturn:[ClearRequestFlags,assert,push_back]
AddUpdateViewport global:[GImGui] call:[DebugLog,FindViewportByID,ImGuiViewportP,ImMax,ImMin,ImNewWrapper,MemAlloc,UpdateViewportPlatformMonitor,UpdateWorkRect,assert,new,push_back,sizeof,while] noreturn:[DebugLog]
DestroyViewport global:[GImGui] call:[DebugLog,DestroyPlatformWindow,IM_DELETE,assert,contains,erase,while] noreturn:[DebugLog,IM_DELETE]
WindowSelectViewport global:[GImGui] call:[AddUpdateViewport,DebugLog,FindPlatformMonitorForPos,FindViewportByID,GetMainViewport,GetWindowAlwaysWantOwnViewport,IsMousePosValid,NavCalcPreferredRefPos,SetWindowViewport,UpdateTryMergeWindowIntoHostViewport,UpdateTryMergeWindowIntoHostViewports,assert,back,while] noreturn:[AddUpdateViewport,DebugLog,FindPlatformMonitorForPos,UpdateTryMergeWindowIntoHostViewports,assert]
WindowSyncOwnedViewport global:[GImGui] call:[MarkIniSettingsDirty,UpdateViewportPlatformMonitor,UpdateWorkRect,memcmp,sizeof] noreturn:[MarkIniSettingsDirty,UpdateViewportPlatformMonitor]
FindPlatformMonitorForPos global:[GImGui] call:[Contains,ImRect]
FindPlatformMonitorForRect global:[GImGui] call:[ClipWithFull,Contains,GetHeight,GetWidth,ImMax,ImRect]
UpdateViewportPlatformMonitor call:[FindPlatformMonitorForRect,GetMainRect] noreturn:[FindPlatformMonitorForRect]
GetViewportPlatformMonitor global:[GImGui]
DestroyPlatformWindow global:[GImGui] call:[ClearRequestFlags,Platform_DestroyWindow,Renderer_DestroyWindow,assert] noreturn:[ClearRequestFlags,Platform_DestroyWindow,Renderer_DestroyWindow,assert]
ImGuiDockRequest
ImGuiDockPreviewData call:[ImRect,sizeof] noreturn:[ImRect]
ImGuiDockNodeSettings call:[memset,sizeof]
DockNodeGetHostWindowTitle call:[ImFormatString]
DockContextInitialize call:[ImHashStr,push_back] noreturn:[push_back]
DockContextShutdown call:[IM_DELETE] noreturn:[IM_DELETE]
DockContextClearNodes global:[GImGui] call:[DockBuilderRemoveNodeChildNodes,DockBuilderRemoveNodeDockedWindows,assert] noreturn:[DockBuilderRemoveNodeChildNodes]
DockContextRebuildNodes call:[DebugLog,DockContextBuildAddWindowsToNodes,DockContextBuildNodesFromSettings,DockContextClearNodes,SaveIniSettingsToMemory,while] noreturn:[DebugLog,DockContextBuildAddWindowsToNodes]
DockContextNewFrameUpdateUndocking call:[DockBuilderRemoveNodeChildNodes,DockContextClearNodes,DockContextProcessUndockNode,DockContextProcessUndockWindow,DockContextRebuildNodes,IsRootNode,IsSplitNode] noreturn:[DockBuilderRemoveNodeChildNodes,DockContextClearNodes,DockContextProcessUndockNode,DockContextProcessUndockWindow]
DockContextNewFrameUpdateDocking call:[DockContextProcessDock,DockNodeTreeFindVisibleNodeByPos,DockNodeUpdate,IsFloatingNode,resize] noreturn:[DockContextProcessDock,DockNodeTreeFindVisibleNodeByPos,DockNodeUpdate]
DockContextEndFrame global:[DOCKING_SPLITTER_SIZE] call:[AddRectFilled,CalcRoundingFlagsForRectInRect,ChannelsSetCurrent,GetFrameHeight,ImVec2,IsLeafNode,Rect,bg_rect] noreturn:[AddRectFilled]
DockContextFindNodeByID call:[GetVoidPtr,return] noreturn:[GetVoidPtr]
DockContextGenNodeID call:[DockContextFindNodeByID]
DockContextAddNode call:[DebugLog,DockContextFindNodeByID,DockContextGenNodeID,ImGuiDockNode,ImNewWrapper,MemAlloc,SetVoidPtr,assert,new,sizeof,while] noreturn:[DebugLog,DockContextGenNodeID,assert]
DockContextRemoveNode call:[DebugLog,DockContextFindNodeByID,DockNodeTreeMerge,IM_DELETE,SetVoidPtr,assert,sizeof,while] noreturn:[DebugLog,DockNodeTreeMerge,IM_DELETE]
DockNodeComparerDepthMostFirst call:[DockNodeGetDepth] noreturn:[DockNodeGetDepth]
ImGuiDockContextPruneNodeData
DockContextPruneUnusedSettingsNodes call:[DebugLog,DockSettingsRemoveNodeReferences,FindWindowSettings,GetByKey,GetOrAddByKey,Reserve,assert,begin,next_chunk,while] noreturn:[DebugLog]
DockContextBuildNodesFromSettings call:[DockContextAddNode,DockContextFindNodeByID,DockNodeGetHostWindowTitle,DockNodeGetRootNode,FindWindowByName,ImVec2,SetLocalFlags,sizeof] noreturn:[FindWindowByName]
DockContextBuildAddWindowsToNodes call:[DockContextFindNodeByID,DockNodeAddWindow,DockNodeGetRootNode,assert] noreturn:[DockNodeAddWindow]
DockContextQueueDock call:[assert,push_back] noreturn:[push_back]
DockContextQueueUndockWindow call:[push_back] noreturn:[push_back]
DockContextQueueUndockNode call:[push_back] noreturn:[push_back]
DockContextQueueNotifyRemovedNode
DockContextProcessDock call:[DebugLog,DockContextAddNode,DockContextFindNodeByID,DockContextRemoveNode,DockNodeAddTabBar,DockNodeAddWindow,DockNodeGetRootNode,DockNodeMoveChildNodes,DockNodeMoveWindows,DockNodeTreeSplit,DockSettingsRenameNodeReferences,IsCentralNode,IsLeafNode,IsSplitNode,MarkIniSettingsDirty,SetLocalFlags,TabBarAddTab,assert,while] noreturn:[DebugLog,DockContextRemoveNode,DockNodeMoveChildNodes,DockSettingsRenameNodeReferences,MarkIniSettingsDirty,TabBarAddTab,assert,while]
FixLargeWindowsWhenUndocking global:[GImGui] call:[GetViewportPlatformMonitor,ImFloor,ImMin] noreturn:[ImFloor,ImMin]
DockContextProcessUndockWindow call:[DebugLog,DockNodeRemoveWindow,FixLargeWindowsWhenUndocking,MarkIniSettingsDirty,while] noreturn:[DebugLog,DockNodeRemoveWindow,MarkIniSettingsDirty]
DockContextProcessUndockNode call:[DebugLog,DockContextAddNode,DockNodeMoveWindows,DockNodeTreeMerge,DockSettingsRenameNodeReferences,FixLargeWindowsWhenUndocking,IsCentralNode,IsLeafNode,IsRootNode,MarkIniSettingsDirty,UpdateWindowParentAndRootLinks,assert,find_erase,while] noreturn:[DebugLog,MarkIniSettingsDirty,UpdateWindowParentAndRootLinks,find_erase]
DockContextCalcDropPosForDocking call:[DockNodePreviewDockSetup,GetCenter,IsCentralNode,IsInverted]
ImGuiDockNode
ImGuiDockNode call:[IM_DELETE]
DockNodeGetTabOrder call:[GetTabOrder,TabBarFindTabByID]
DockNodeHideWindowDuringHostWindowCreation
DockNodeAddWindow global:[GImGui] call:[DebugLog,DockNodeAddTabBar,DockNodeHideWindowDuringHostWindowCreation,DockNodeRemoveWindow,DockNodeUpdateVisibleFlag,IsFloatingNode,TabBarAddTab,UpdateWindowParentAndRootLinks,assert,push_back,while] noreturn:[DebugLog,DockNodeHideWindowDuringHostWindowCreation,DockNodeRemoveWindow,TabBarAddTab,UpdateWindowParentAndRootLinks]
DockNodeRemoveWindow global:[GImGui] call:[DebugLog,DockContextRemoveNode,DockNodeRemoveTabBar,DockNodeUpdateVisibleFlag,IsCentralNode,IsDockSpace,IsRootNode,TabBarRemoveTab,UpdateWindowParentAndRootLinks,assert,erase,find_erase,while] noreturn:[DebugLog,DockNodeRemoveTabBar,DockNodeUpdateVisibleFlag,assert,find_erase]
DockNodeMoveChildNodes call:[assert]
DockNodeMoveWindows call:[DockNodeAddWindow,DockNodeRemoveTabBar,assert,clear] noreturn:[DockNodeAddWindow,DockNodeRemoveTabBar,assert]
DockNodeApplyPosSizeToWindows call:[SetWindowPos,SetWindowSize] noreturn:[SetWindowSize]
DockNodeHideHostWindow call:[DockNodeRemoveTabBar] noreturn:[DockNodeRemoveTabBar]
ImGuiDockNodeTreeInfo call:[memset,sizeof] noreturn:[memset]
DockNodeFindInfo call:[DockNodeFindInfo,IsCentralNode,IsLeafNode,assert] noreturn:[DockNodeFindInfo]
DockNodeFindWindowByID call:[assert]
DockNodeUpdateFlagsAndCollapse global:[GImGui] call:[DockNodeHideHostWindow,DockNodeRemoveWindow,DockNodeUpdateFlagsAndCollapse,DockNodeUpdateVisibleFlag,IsCentralNode,IsHiddenTabBar,SetLocalFlags,UpdateMergedFlags,assert] noreturn:[DockNodeUpdateFlagsAndCollapse,DockNodeUpdateVisibleFlag,SetLocalFlags]
DockNodeUpdateHasCentralNodeChild call:[DockNodeUpdateHasCentralNodeChild,IsRootNode] noreturn:[DockNodeUpdateHasCentralNodeChild]
DockNodeUpdateVisibleFlag call:[IsCentralNode,IsDockSpace]
DockNodeStartMouseMovingWindow global:[GImGui] call:[StartMouseMovingWindow,assert]
DockNodeUpdateForRootNode call:[DockNodeFindInfo,DockNodeUpdateFlagsAndCollapse]
DockNodeSetupHostWindow
DockNodeUpdate global:[GImGui,WINDOWS_HOVER_PADDING] call:[AddRectFilled,Begin,BeginDockableDragDropTarget,BringWindowToDisplayFront,ChannelsSetCurrent,DockNodeFindWindowByID,DockNodeGetHostWindowTitle,DockNodeGetRootNode,DockNodeHideHostWindow,DockNodeIsDropAllowed,DockNodeRemoveTabBar,DockNodeSetupHostWindow,DockNodeStartMouseMovingWindow,DockNodeTreeUpdatePosSize,DockNodeTreeUpdateSplitter,DockNodeUpdate,DockNodeUpdateForRootNode,DockNodeUpdateTabBar,End,FocusWindow,GetColorU32,GetDragDropPayload,ImVec2,IsDataType,IsDockSpace,IsEmpty,IsFloatingNode,IsInverted,IsLeafNode,IsNoTabBar,IsRootNode,IsSplitNode,PopStyleVar,PushStyleVar,Rect,RenderRectFilledWithHole,RenderWindowOuterBorders,SetNextWindowBgAlpha,SetNextWindowClass,SetNextWindowCollapsed,SetNextWindowPos,SetNextWindowSize,SetNextWindowViewport,SetWindowHitTestHole,assert,hole_rect,root_rect,sizeof] noreturn:[AddRectFilled,BeginDockableDragDropTarget,BringWindowToDisplayFront,ChannelsSetCurrent,DockNodeFindWindowByID,DockNodeRemoveTabBar,DockNodeStartMouseMovingWindow,DockNodeTreeUpdateSplitter,DockNodeUpdate,DockNodeUpdateForRootNode,DockNodeUpdateTabBar,End,FocusWindow,RenderRectFilledWithHole,RenderWindowOuterBorders,SetNextWindowCollapsed,SetNextWindowPos,SetNextWindowSize,SetNextWindowViewport,SetWindowHitTestHole,assert]
TabItemComparerByDockOrder call:[return] noreturn:[return]
DockNodeUpdateWindowMenu global:[GImGui] call:[BeginPopup,EndPopup,GetFrameHeight,GetTabName,ImVec2,IsHiddenTabBar,MenuItem,SameLine,Selectable,SetNextWindowPos,Text] noreturn:[EndPopup,SetNextWindowPos,Text]
DockNodeBeginAmendTabBar call:[Begin,BeginTabBarEx,PushOverrideID,assert]
DockNodeEndAmendTabBar call:[End,EndTabBar,PopID] noreturn:[End]
IsDockNodeTitleBarHighlighted global:[GImGui] call:[DockNodeGetRootNode,return] noreturn:[return]
DockNodeUpdateTabBar global:[DOCKING_SPLITTER_SIZE,GImGui,GWindowDockStyleColors] call:[AddRectFilled,BeginTabBarEx,ButtonBehavior,CalcRoundingFlagsForRectInRect,CloseButton,CollapseButton,ColorConvertU32ToFloat4,DebugLog,DockNodeAddTabBar,DockNodeCalcTabBarLayout,DockNodeGetRootNode,DockNodeUpdateWindowMenu,EndTabBar,FocusWindow,GetColorU32,GetID,ImQsort,ImVec4,IsDockNodeTitleBarHighlighted,IsDockSpace,IsHiddenTabBar,IsItemActive,IsMouseClicked,IsNoTabBar,IsPopupOpen,NavInitWindow,OpenPopup,PopID,PopItemFlag,PopStyleColor,PushItemFlag,PushOverrideID,PushStyleColor,Rect,SetItemAllowOverlap,StartMouseMovingWindowOrNode,TabBarAddTab,TabBarCloseTab,TabBarFindTabByID,TabItemEx,back,sizeof,while] noreturn:[ColorConvertU32ToFloat4,DebugLog,ImQsort,NavInitWindow,OpenPopup,PopItemFlag,PushStyleColor,SetItemAllowOverlap,StartMouseMovingWindowOrNode,TabBarAddTab,TabBarCloseTab,while]
DockNodeAddTabBar call:[ImNewWrapper,MemAlloc,assert,new,sizeof]
DockNodeRemoveTabBar call:[IM_DELETE]
DockNodeIsDropAllowedOne global:[GImGui] call:[IsDockSpace,IsWindowWithinBeginStackOf]
DockNodeIsDropAllowed call:[DockNodeIsDropAllowedOne,IsSplitNode]
DockNodeCalcTabBarLayout global:[GImGui] call:[ImRect,ImVec2] noreturn:[ImVec2]
DockNodeCalcSplitRects global:[GImGui]
DockNodeCalcDropRectsAndTestMousePos global:[GImGui] call:[Contains,Expand,GetCenter,GetHeight,GetWidth,ImFloor,ImGetDirQuadrantFromDelta,ImLengthSqr,ImMax,ImMin,ImRect,ImVec2,return] noreturn:[Contains,ImRect,ImVec2,return]
DockNodePreviewDockSetup global:[GImGui] call:[DockNodeCalcDropRectsAndTestMousePos,DockNodeCalcSplitRects,DockNodeGetRootNode,ImSaturate,IsCentralNode,IsEmpty,IsSplitNode,Rect,assert] noreturn:[assert]
DockNodePreviewDockRender global:[DOCKING_SPLITTER_SIZE,GImGui] call:[AddLine,AddRect,AddRectFilled,CalcRoundingFlagsForRectInRect,Contains,DockNodeCalcTabBarLayout,DockNodeIsDropAllowedOne,Expand,GetCenter,GetColorU32,GetForegroundDrawList,GetFrameHeight,ImFloor,ImMax,ImVec2,IsHiddenTabBar,IsInverted,IsNoTabBar,PopClipRect,PopStyleColor,PushClipRect,PushStyleColor,Rect,TabItemBackground,TabItemCalcSize,TabItemLabelAndCloseButton,assert,tab_bb] noreturn:[AddLine,AddRectFilled,GetForegroundDrawList,GetFrameHeight,PopClipRect,PopStyleColor,PushClipRect,assert]
DockNodeTreeSplit global:[DOCKING_SPLITTER_SIZE,GImGui] call:[DockContextAddNode,DockNodeGetRootNode,DockNodeMoveChildNodes,DockNodeMoveWindows,DockNodeTreeUpdatePosSize,DockNodeUpdateHasCentralNodeChild,DockSettingsRenameNodeReferences,ImFloor,ImMax,IsCentralNode,UpdateMergedFlags,assert]
DockNodeTreeMerge global:[GImGui] call:[DebugLog,DockNodeApplyPosSizeToWindows,DockNodeMoveChildNodes,DockNodeMoveWindows,DockSettingsRenameNodeReferences,IM_DELETE,SetVoidPtr,UpdateMergedFlags,assert,while] noreturn:[DebugLog,DockSettingsRenameNodeReferences,IM_DELETE,assert]
DockNodeTreeUpdatePosSize global:[DOCKING_SPLITTER_SIZE,GImGui] call:[DockNodeIsInHierarchyOf,DockNodeTreeUpdatePosSize,ImFloor,ImMax,ImMin,IsLeafNode,assert] noreturn:[DockNodeTreeUpdatePosSize,assert]
DockNodeTreeUpdateSplitterFindTouchingNode call:[DockNodeTreeUpdateSplitterFindTouchingNode,IsLeafNode,push_back] noreturn:[DockNodeTreeUpdateSplitterFindTouchingNode]
DockNodeTreeUpdateSplitter global:[GImGui,WINDOWS_HOVER_PADDING,WINDOWS_RESIZE_FROM_EDGES_FEEDBACK_TIMER] call:[AddRectFilled,DockNodeTreeUpdatePosSize,DockNodeTreeUpdateSplitter,DockNodeTreeUpdateSplitterFindTouchingNode,GetColorU32,GetID,ImMax,ImMin,IsLeafNode,MarkIniSettingsDirty,PopID,PushID,Rect,SplitterBehavior,assert] noreturn:[AddRectFilled,DockNodeTreeUpdateSplitter,ImMax,ImMin,MarkIniSettingsDirty,PopID]
DockNodeTreeFindFallbackLeafNode call:[DockNodeTreeFindFallbackLeafNode,IsLeafNode]
DockNodeTreeFindVisibleNodeByPos call:[Contains,DockNodeTreeFindVisibleNodeByPos,Expand,IsLeafNode,r]
SetWindowDock global:[GImGui] call:[DockContextFindNodeByID,DockNodeGetRootNode,DockNodeRemoveWindow,IsCentralNode,IsSplitNode,assert] noreturn:[DockNodeRemoveWindow]
DockBuilderDockWindow call:[CreateNewWindowSettings,FindWindowByID,FindWindowSettings,ImHashStr,SetWindowDock] noreturn:[CreateNewWindowSettings]
DockBuilderGetNode global:[GImGui] call:[DockContextFindNodeByID] noreturn:[DockContextFindNodeByID]
DockBuilderSetNodePos global:[GImGui] call:[DockContextFindNodeByID]
DockBuilderSetNodeSize global:[GImGui] call:[DockContextFindNodeByID,assert]
DockBuilderAddNode global:[GImGui] call:[DockBuilderRemoveNode,DockContextAddNode,DockContextFindNodeByID,DockSpace,ImVec2,SetLocalFlags] noreturn:[DockBuilderRemoveNode,DockContextFindNodeByID,SetLocalFlags]
DockBuilderRemoveNode global:[GImGui] call:[DockBuilderRemoveNodeChildNodes,DockBuilderRemoveNodeDockedWindows,DockContextFindNodeByID,DockContextRemoveNode,IsCentralNode,SetLocalFlags] noreturn:[DockContextRemoveNode,SetLocalFlags]
DockBuilderRemoveNodeChildNodes global:[GImGui] call:[Clear,DockContextFindNodeByID,DockContextQueueNotifyRemovedNode,DockContextRemoveNode,DockNodeGetRootNode,DockNodeMoveWindows,DockSettingsRenameNodeReferences,ImQsort,IsCentralNode,SetLocalFlags,begin,clear,next_chunk,push_back,sizeof] noreturn:[DockContextQueueNotifyRemovedNode,DockContextRemoveNode,DockSettingsRenameNodeReferences,ImQsort,SetLocalFlags,clear,push_back]
DockBuilderRemoveNodeDockedWindows global:[GImGui] call:[DockContextFindNodeByID,DockContextProcessUndockWindow,DockNodeGetRootNode,assert,begin,next_chunk] noreturn:[assert]
DockBuilderSplitNode global:[GImGui] call:[DebugLog,DockContextFindNodeByID,DockContextProcessDock,ImSaturate,IsSplitNode,assert,while] noreturn:[DebugLog]
DockBuilderCopyNodeRec global:[GImGui] call:[DebugLog,DockBuilderCopyNodeRec,DockContextAddNode,IsSplitNode,UpdateMergedFlags,push_back,sizeof,while] noreturn:[DebugLog]
DockBuilderCopyNode global:[GImGui] call:[DockBuilderCopyNodeRec,DockBuilderRemoveNode,DockContextFindNodeByID,assert,clear] noreturn:[assert]
DockBuilderCopyWindowSettings call:[FindOrCreateWindowSettings,FindWindowByName,ImVec2ih] noreturn:[ImVec2ih]
DockBuilderCopyDockSpace global:[GImGui] call:[DebugLog,DockBuilderCopyNode,DockBuilderCopyWindowSettings,DockBuilderDockWindow,DockBuilderGetNode,FindWindowByID,FindWindowSettings,ImHashStr,assert,contains,push_back,while] noreturn:[DebugLog,DockBuilderCopyWindowSettings,DockBuilderDockWindow]
DockBuilderFinish global:[GImGui] call:[DockContextBuildAddWindowsToNodes] noreturn:[DockContextBuildAddWindowsToNodes]
GetWindowAlwaysWantOwnTabBar global:[GImGui]
DockContextBindNodeToWindow call:[DockContextAddNode,DockContextFindNodeByID,DockContextProcessUndockWindow,DockNodeAddWindow,DockNodeGetRootNode,DockNodeTreeUpdatePosSize,DockNodeUpdateHasCentralNodeChild,IsSplitNode,assert] noreturn:[DockNodeTreeUpdatePosSize]
BeginDocked global:[GImGui,GWindowDockStyleColors] call:[ColorConvertFloat4ToU32,DockContextBindNodeToWindow,DockContextGenNodeID,DockContextProcessUndockWindow,DockNodeGetRootNode,DockNodeGetTabOrder,DockNodeHideWindowDuringHostWindowCreation,GetID,GetWindowAlwaysWantOwnTabBar,IsHiddenTabBar,IsLeafNode,IsNoTabBar,SetNextWindowPos,SetNextWindowSize,assert] noreturn:[ColorConvertFloat4ToU32,DockContextGenNodeID,DockContextProcessUndockWindow,DockNodeGetTabOrder,DockNodeHideWindowDuringHostWindowCreation,GetID,assert]
BeginDockableDragDropSource global:[GImGui,GWindowDockStyleColors] call:[BeginDragDropSource,ColorConvertFloat4ToU32,Contains,EndDragDropSource,GetFrameHeight,ImRect,SetDragDropPayload,assert,sizeof] noreturn:[ColorConvertFloat4ToU32]
BeginDockableDragDropTarget global:[GImGui] call:[AcceptDragDropPayload,BeginDragDropTargetCustom,DockContextQueueDock,DockNodeGetRootNode,DockNodeIsDropAllowed,DockNodePreviewDockRender,DockNodePreviewDockSetup,DockNodeTreeFindFallbackLeafNode,DockNodeTreeFindVisibleNodeByPos,EndDragDropTarget,GetFrameHeight,ImRect,ImVec2,IsCentralNode,IsDataType,IsDelivery,IsDockSpace,IsHiddenTabBar,IsLeafNode,IsMouseHoveringRect,IsNoTabBar,IsPreview,IsRootNode,Rect,assert] noreturn:[DockContextQueueDock,DockNodePreviewDockSetup,DockNodeTreeFindFallbackLeafNode,EndDragDropTarget]
DockSettingsRenameNodeReferences global:[GImGui] call:[DebugLog,begin,next_chunk,while] noreturn:[DebugLog]
DockSettingsRemoveNodeReferences global:[GImGui] call:[begin,next_chunk]
DockSettingsFindNodeSettings
DockSettingsHandler_ClearAll call:[DockContextClearNodes,clear] noreturn:[DockContextClearNodes]
DockSettingsHandler_ApplyAll call:[DockContextBuildAddWindowsToNodes,DockContextBuildNodesFromSettings,DockContextPruneUnusedSettingsNodes] noreturn:[DockContextBuildAddWindowsToNodes,DockContextPruneUnusedSettingsNodes]
DockSettingsHandler_ReadOpen call:[return,strcmp]
DockSettingsHandler_ReadLine call:[DockSettingsFindNodeSettings,ImStrSkipBlank,ImVec2ih,push_back,sscanf,strlen,strncmp] noreturn:[ImStrSkipBlank,ImVec2ih,push_back]
DockSettingsHandler_DockNodeToSettings call:[DockSettingsHandler_DockNodeToSettings,ImVec2ih,IsDockSpace,IsSplitNode,assert,push_back,sizeof] noreturn:[DockSettingsHandler_DockNodeToSettings]
DockSettingsHandler_WriteAll call:[DockSettingsHandler_DockNodeToSettings,ImMax,IsRootNode,appendf,reserve,resize,size] noreturn:[DockSettingsHandler_DockNodeToSettings,ImMax,appendf]
GetClipboardTextFn_DefaultImpl global:[GImGui] call:[CloseClipboard,GetClipboardData,GlobalLock,GlobalUnlock,OpenClipboard,WideCharToMultiByte,clear,resize] noreturn:[WideCharToMultiByte]
SetClipboardTextFn_DefaultImpl call:[CloseClipboard,EmptyClipboard,GlobalAlloc,GlobalFree,GlobalLock,GlobalUnlock,MultiByteToWideChar,OpenClipboard,SetClipboardData,sizeof] noreturn:[CloseClipboard,GlobalFree]
SetPlatformImeDataFn_DefaultImpl call:[GetIO,ImmGetContext,ImmReleaseContext,ImmSetCandidateWindow,ImmSetCompositionWindow] noreturn:[ImmReleaseContext]
DebugRenderViewportThumbnail global:[GImGui] call:[AddRect,AddRectFilled,AddText,ClipWithFull,FindRenderedTextEnd,GetColorU32,GetSize,ImFloor,ImRect,ImVec2,Rect,TitleBarRect] noreturn:[AddRect,AddText]
RenderViewportsThumbnails global:[GImGui] call:[Add,DebugRenderViewportThumbnail,Dummy,GetMainRect,GetSize,bb_full,viewport_draw_bb] noreturn:[Add,DebugRenderViewportThumbnail,Dummy]
ViewportComparerByFrontMostStampCount
MetricsHelpMarker call:[BeginTooltip,EndTooltip,GetFontSize,IsItemHovered,PopTextWrapPos,PushTextWrapPos,TextDisabled,TextUnformatted] noreturn:[EndTooltip]
ShowFontAtlas call:[DebugNodeFont,ImVec2,ImVec4,Image,PopID,PushID,TreeNode,TreePop] noreturn:[PopID,TreePop]
GetTableRect call:[ImRect,TableGetInstanceData,assert] noreturn:[ImRect]
GetWindowRect call:[ImRect,Rect,assert] noreturn:[ImRect,Rect]
WindowComparerByBeginOrder call:[return] noreturn:[return]
DebugNodeColumns call:[BulletText,GetColumnOffsetFromNorm,TreeNode,TreePop] noreturn:[BulletText,TreePop]
DebugNodeDockNodeFlags call:[BeginDisabled,CheckboxFlags,EndDisabled,ImVec2,PopID,PopStyleVar,PushID,PushStyleVar,Text] noreturn:[BeginDisabled,EndDisabled,PopID]
DebugNodeDockNode global:[GImGui] call:[AddRect,BeginTable,BulletText,DebugNodeDockNode,DebugNodeDockNodeFlags,DebugNodeTabBar,DebugNodeWindow,DebugNodeWindowsList,EndTable,GetForegroundDrawList,GetStyleColorVec4,IsCentralNode,IsDockSpace,IsItemHovered,PopStyleColor,PushStyleColor,TableNextColumn,TreeNode,TreeNodeEx,TreePop,assert] noreturn:[AddRect,DebugNodeDockNode,DebugNodeTabBar,EndTable,PopStyleColor,PushStyleColor,TreeNodeEx,TreePop]
DebugNodeDrawList global:[GImGui] call:[AddPolyline,AddRect,Begin,BulletText,DebugNodeDrawCmdShowMeshAndBoundingBox,GetForegroundDrawList,GetWindowDrawList,ImFormatString,ImTriangleArea,ImVec4,IsItemHovered,SameLine,Selectable,Step,TextColored,TextDisabled,TreeNode,TreePop,back,begin,sizeof] noreturn:[AddRect,DebugNodeDrawCmdShowMeshAndBoundingBox,ImFormatString,ImTriangleArea,TextDisabled,TreePop]
DebugNodeDrawCmdShowMeshAndBoundingBox call:[Add,AddPolyline,AddRect,ImFloor,assert,vtxs_rect] noreturn:[Add,AddPolyline,AddRect]
DebugNodeFont call:[AddRect,BeginTooltip,BulletText,DebugNodeFontGlyph,DragFloat,Dummy,EndTooltip,FindGlyphNoFallback,GetColorU32,GetCursorScreenPos,GetFontSize,GetIO,GetStyle,GetWindowDrawList,ImTextCharToUtf8,ImVec2,IsGlyphRangeUnused,IsMouseHoveringRect,MetricsHelpMarker,PopFont,PushFont,RenderChar,SameLine,SetNextItemWidth,SmallButton,Text,TreeNode,TreePop,cell_p1,cell_p2,sqrtf] noreturn:[BulletText,EndTooltip,TreePop]
DebugNodeFontGlyph call:[Separator,Text] noreturn:[Text]
DebugNodeStorage call:[BulletText,TreeNode,TreePop,size_in_bytes] noreturn:[BulletText,TreePop]
DebugNodeTabBar call:[AddLine,AddRect,GetForegroundDrawList,GetFrameCount,GetStyleColorVec4,GetTabName,ImFormatString,ImMin,ImVec2,IsItemHovered,PopID,PopStyleColor,PushID,PushStyleColor,SameLine,SmallButton,TabBarQueueReorder,Text,TreeNode,TreePop,sizeof] noreturn:[AddLine,ImFormatString,PopID,PopStyleColor,PushStyleColor,TabBarQueueReorder,TreePop]
DebugNodeViewport call:[BulletText,DebugNodeDrawList,ImVec2,SameLine,SetNextItemOpen,SmallButton,TreeNode,TreePop,UpdateWorkRect,sizeof] noreturn:[DebugNodeDrawList,TreePop]
DebugNodeWindow global:[GImGui] call:[AddRect,BulletText,DebugLocateItemOnHover,DebugNodeColumns,DebugNodeDockNode,DebugNodeDrawList,DebugNodeStorage,DebugNodeWindow,DebugNodeWindowsList,GetForegroundDrawList,GetStyleColorVec4,IsItemHovered,PopStyleColor,PushStyleColor,TextDisabled,TreeNode,TreeNodeEx,TreePop] noreturn:[AddRect,BulletText,DebugLocateItemOnHover,DebugNodeColumns,DebugNodeDockNode,DebugNodeWindow,DebugNodeWindowsList,PopStyleColor,PushStyleColor,TextDisabled,TreePop]
DebugNodeWindowSettings call:[GetName,Text] noreturn:[Text]
DebugNodeWindowsList call:[DebugNodeWindow,PopID,PushID,TreeNode,TreePop] noreturn:[PopID,TreePop]
DebugNodeWindowsListByBeginStackParent call:[DebugNodeWindow,DebugNodeWindowsListByBeginStackParent,ImFormatString,Indent,Unindent,sizeof] noreturn:[Unindent]
DebugLog call:[DebugLogV,va_end,va_start] noreturn:[va_end]
DebugLogV global:[GImGui] call:[append,appendf,appendfv,begin,c_str,printf,size] noreturn:[append,printf]
DebugLocateItem global:[GImGui]
DebugLocateItemOnHover global:[DEBUG_LOCATE_ITEM_COLOR,GImGui] call:[AddRect,DebugLocateItem,GetForegroundDrawList,ImVec2,IsItemHovered] noreturn:[AddRect]
DebugLocateItemResolveWithLastItem global:[DEBUG_LOCATE_ITEM_COLOR,GImGui] call:[AddLine,AddRect,Expand,GetForegroundDrawList,ImVec2] noreturn:[AddLine]
UpdateDebugToolItemPicker global:[GImGui] call:[BeginTooltip,EndTooltip,GetStyleColorVec4,IsKeyPressed,IsMouseClicked,SetMouseCursor,SetNextWindowBgAlpha,Text,TextColored] noreturn:[EndTooltip,Text,TextColored]
UpdateDebugToolStackQueries global:[GImGui] call:[resize] noreturn:[resize]
DebugHookIdInfo global:[GImGui] call:[ImFormatString,ImGuiStackLevelInfo,assert,resize,sizeof,strlen] noreturn:[assert]
StackToolFormatLevelInfo call:[FindWindowByID,ImFormatString,return] noreturn:[ImFormatString,return]
clear call:[clear] noreturn:[clear]
empty
size
alloc_chunk call:[resize,return]
begin call:[return]
next_chunk call:[assert,begin,chunk_size,end,return]
chunk_size call:[return]
end call:[return]
offset_from_ptr call:[assert,begin,end,return]
ptr_from_offset call:[assert,return]
swap call:[swap] noreturn:[swap]
clear call:[clear] noreturn:[clear]
empty
size
alloc_chunk call:[resize,return]
begin call:[return]
next_chunk call:[assert,begin,chunk_size,end,return]
chunk_size call:[return]
end call:[return]
offset_from_ptr call:[assert,begin,end,return]
ptr_from_offset call:[assert,return]
swap call:[swap] noreturn:[swap]
ImPool < ImGuiTable >
ImPool < ImGuiTable > call:[Clear] noreturn:[Clear]
GetByKey call:[GetInt,return]
GetByIndex
GetIndex call:[assert,return]
GetOrAddByKey call:[Add,GetIntRef] noreturn:[Add]
Contains call:[return] noreturn:[return]
Clear call:[Clear,ImGuiTable,clear] noreturn:[ImGuiTable]
Add call:[ImGuiTable,ImNewWrapper,new,resize]
Remove call:[GetIndex,Remove] noreturn:[Remove]
Remove call:[ImGuiTable,SetInt]
Reserve call:[reserve] noreturn:[reserve]
GetAliveCount
GetBufSize
GetMapSize
TryGetMapData call:[GetByIndex] noreturn:[GetByIndex]
GetSize call:[GetMapSize] noreturn:[GetMapSize]
ImPool < ImGuiTabBar >
ImPool < ImGuiTabBar > call:[Clear] noreturn:[Clear]
GetByKey call:[GetInt,return]
GetByIndex
GetIndex call:[assert,return]
GetOrAddByKey call:[Add,GetIntRef] noreturn:[Add]
Contains call:[return] noreturn:[return]
Clear call:[Clear,ImGuiTabBar,clear] noreturn:[ImGuiTabBar]
Add call:[ImGuiTabBar,ImNewWrapper,new,resize]
Remove call:[GetIndex,Remove] noreturn:[Remove]
Remove call:[ImGuiTabBar,SetInt]
Reserve call:[reserve] noreturn:[reserve]
GetAliveCount
GetBufSize
GetMapSize
TryGetMapData call:[GetByIndex] noreturn:[GetByIndex]
GetSize call:[GetMapSize] noreturn:[GetMapSize]
ImPool < ImGuiDockContextPruneNodeData >
ImPool < ImGuiDockContextPruneNodeData > call:[Clear] noreturn:[Clear]
GetByKey call:[GetInt,return]
GetByIndex
GetIndex call:[assert,return]
GetOrAddByKey call:[Add,GetIntRef] noreturn:[Add]
Contains call:[return] noreturn:[return]
Clear call:[Clear,ImGuiDockContextPruneNodeData,clear] noreturn:[ImGuiDockContextPruneNodeData]
Add call:[ImGuiDockContextPruneNodeData,ImNewWrapper,new,resize]
Remove call:[GetIndex,Remove] noreturn:[Remove]
Remove call:[ImGuiDockContextPruneNodeData,SetInt]
Reserve call:[reserve] noreturn:[reserve]
GetAliveCount
GetBufSize
GetMapSize
TryGetMapData call:[GetByIndex] noreturn:[GetByIndex]
GetSize call:[GetMapSize] noreturn:[GetMapSize]
ImSpan < ImGuiTableColumn >
ImSpan < ImGuiTableColumn >
ImSpan < ImGuiTableColumn >
set
set
size call:[return]
size_in_bytes call:[return,sizeof] noreturn:[sizeof]
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
index_from_ptr call:[assert,return]
ImSpan < signed char >
ImSpan < signed char >
ImSpan < signed char >
set
set
size call:[return]
size_in_bytes call:[return,sizeof] noreturn:[sizeof]
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
index_from_ptr call:[assert,return]
ImSpan < ImGuiTableCellData >
ImSpan < ImGuiTableCellData >
ImSpan < ImGuiTableCellData >
set
set
size call:[return]
size_in_bytes call:[return,sizeof] noreturn:[sizeof]
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
index_from_ptr call:[assert,return]
ImBitArray < ImGuiKey_KeysData_SIZE , 0 > call:[ClearAllBits] noreturn:[ClearAllBits]
ClearAllBits call:[memset,sizeof] noreturn:[memset]
SetAllBits call:[memset,sizeof] noreturn:[memset]
TestBit call:[ImBitArrayTestBit,assert] noreturn:[ImBitArrayTestBit]
SetBit call:[ImBitArraySetBit,assert] noreturn:[ImBitArraySetBit]
ClearBit call:[ImBitArrayClearBit,assert] noreturn:[ImBitArrayClearBit]
SetBitRange call:[ImBitArraySetBitRange,assert] noreturn:[ImBitArraySetBitRange]
operator[] call:[ImBitArrayTestBit,assert] noreturn:[ImBitArrayTestBit]
ImVector < unsigned short >
ImVector < unsigned short > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < unsigned short > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear,short] noreturn:[clear,short]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTextRange >
ImVector < ImGuiTextRange > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiTextRange > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTextRange,clear] noreturn:[ImGuiTextRange,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < char >
ImVector < char > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < char > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[char,clear] noreturn:[char,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiStoragePair >
ImVector < ImGuiStoragePair > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiStoragePair > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiStoragePair,clear] noreturn:[ImGuiStoragePair,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImDrawCmd >
ImVector < ImDrawCmd > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImDrawCmd > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImDrawCmd,clear] noreturn:[ImDrawCmd,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImDrawChannel >
ImVector < ImDrawChannel > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImDrawChannel > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImDrawChannel,clear] noreturn:[ImDrawChannel,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImDrawVert >
ImVector < ImDrawVert > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImDrawVert > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImDrawVert,clear] noreturn:[ImDrawVert,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImVec4 >
ImVector < ImVec4 > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImVec4 > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImVec4,clear] noreturn:[ImVec4,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < void * >
ImVector < void * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < void * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImVec2 >
ImVector < ImVec2 > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImVec2 > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImVec2,clear] noreturn:[ImVec2,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < unsigned int >
ImVector < unsigned int > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < unsigned int > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear,int] noreturn:[clear,int]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImFont * >
ImVector < ImFont * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImFont * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImFontAtlasCustomRect >
ImVector < ImFontAtlasCustomRect > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImFontAtlasCustomRect > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImFontAtlasCustomRect,clear] noreturn:[ImFontAtlasCustomRect,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImFontConfig >
ImVector < ImFontConfig > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImFontConfig > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImFontConfig,clear] noreturn:[ImFontConfig,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < float >
ImVector < float > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < float > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear,float] noreturn:[clear,float]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImFontGlyph >
ImVector < ImFontGlyph > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImFontGlyph > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImFontGlyph,clear] noreturn:[ImFontGlyph,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiPlatformMonitor >
ImVector < ImGuiPlatformMonitor > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiPlatformMonitor > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiPlatformMonitor,clear] noreturn:[ImGuiPlatformMonitor,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiViewport * >
ImVector < ImGuiViewport * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiViewport * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < int >
ImVector < int > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < int > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear,int] noreturn:[clear,int]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImDrawList * >
ImVector < ImDrawList * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImDrawList * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiKeyRoutingData >
ImVector < ImGuiKeyRoutingData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiKeyRoutingData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiKeyRoutingData,clear] noreturn:[ImGuiKeyRoutingData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiListClipperRange >
ImVector < ImGuiListClipperRange > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiListClipperRange > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiListClipperRange,clear] noreturn:[ImGuiListClipperRange,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiOldColumnData >
ImVector < ImGuiOldColumnData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiOldColumnData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiOldColumnData,clear] noreturn:[ImGuiOldColumnData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiWindow * >
ImVector < ImGuiWindow * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiWindow * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiDockRequest >
ImVector < ImGuiDockRequest > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiDockRequest > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiDockRequest,clear] noreturn:[ImGuiDockRequest,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiDockNodeSettings >
ImVector < ImGuiDockNodeSettings > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiDockNodeSettings > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiDockNodeSettings,clear] noreturn:[ImGuiDockNodeSettings,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiStackLevelInfo >
ImVector < ImGuiStackLevelInfo > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiStackLevelInfo > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiStackLevelInfo,clear] noreturn:[ImGuiStackLevelInfo,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiInputEvent >
ImVector < ImGuiInputEvent > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiInputEvent > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiInputEvent,clear] noreturn:[ImGuiInputEvent,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiWindowStackData >
ImVector < ImGuiWindowStackData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiWindowStackData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiWindowStackData,clear] noreturn:[ImGuiWindowStackData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiColorMod >
ImVector < ImGuiColorMod > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiColorMod > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiColorMod,clear] noreturn:[ImGuiColorMod,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiStyleMod >
ImVector < ImGuiStyleMod > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiStyleMod > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiStyleMod,clear] noreturn:[ImGuiStyleMod,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiGroupData >
ImVector < ImGuiGroupData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiGroupData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiGroupData,clear] noreturn:[ImGuiGroupData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiPopupData >
ImVector < ImGuiPopupData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiPopupData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiPopupData,clear] noreturn:[ImGuiPopupData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiViewportP * >
ImVector < ImGuiViewportP * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiViewportP * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < unsigned char >
ImVector < unsigned char > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < unsigned char > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[char,clear] noreturn:[char,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiListClipperData >
ImVector < ImGuiListClipperData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiListClipperData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiListClipperData,clear] noreturn:[ImGuiListClipperData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTableTempData >
ImVector < ImGuiTableTempData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiTableTempData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTableTempData,clear] noreturn:[ImGuiTableTempData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiPtrOrIndex >
ImVector < ImGuiPtrOrIndex > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiPtrOrIndex > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiPtrOrIndex,clear] noreturn:[ImGuiPtrOrIndex,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiShrinkWidthItem >
ImVector < ImGuiShrinkWidthItem > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiShrinkWidthItem > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiShrinkWidthItem,clear] noreturn:[ImGuiShrinkWidthItem,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiSettingsHandler >
ImVector < ImGuiSettingsHandler > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiSettingsHandler > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiSettingsHandler,clear] noreturn:[ImGuiSettingsHandler,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiContextHook >
ImVector < ImGuiContextHook > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiContextHook > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiContextHook,clear] noreturn:[ImGuiContextHook,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiOldColumns >
ImVector < ImGuiOldColumns > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiOldColumns > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiOldColumns,clear] noreturn:[ImGuiOldColumns,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTabItem >
ImVector < ImGuiTabItem > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiTabItem > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTabItem,clear] noreturn:[ImGuiTabItem,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTableInstanceData >
ImVector < ImGuiTableInstanceData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiTableInstanceData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTableInstanceData,clear] noreturn:[ImGuiTableInstanceData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTableColumnSortSpecs >
ImVector < ImGuiTableColumnSortSpecs > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiTableColumnSortSpecs > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTableColumnSortSpecs,clear] noreturn:[ImGuiTableColumnSortSpecs,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < const char * >
ImVector < const char * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < const char * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiStorage :: ImGuiStoragePair >
ImVector < ImGuiStorage :: ImGuiStoragePair > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiStorage :: ImGuiStoragePair > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiStoragePair,clear] noreturn:[ImGuiStoragePair,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiDockNode * >
ImVector < ImGuiDockNode * > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiDockNode * > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[clear] noreturn:[clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTable >
ImVector < ImGuiTable > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiTable > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTable,clear] noreturn:[ImGuiTable,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiTabBar >
ImVector < ImGuiTabBar > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiTabBar > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiTabBar,clear] noreturn:[ImGuiTabBar,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
ImVector < ImGuiDockContextPruneNodeData >
ImVector < ImGuiDockContextPruneNodeData > call:[operator=] noreturn:[operator=]
operator= call:[clear,memcpy,resize,sizeof] noreturn:[memcpy]
ImVector < ImGuiDockContextPruneNodeData > call:[MemFree] noreturn:[MemFree]
clear call:[MemFree]
clear_delete call:[IM_DELETE,clear] noreturn:[IM_DELETE,clear]
clear_destruct call:[ImGuiDockContextPruneNodeData,clear] noreturn:[ImGuiDockContextPruneNodeData,clear]
empty
size
size_in_bytes call:[sizeof] noreturn:[sizeof]
max_size call:[sizeof] noreturn:[sizeof]
capacity
operator[] call:[assert]
operator[] call:[assert]
begin
begin
end
end
front call:[assert]
front call:[assert]
back call:[assert]
back call:[assert]
swap
_grow_capacity
resize call:[_grow_capacity,reserve] noreturn:[reserve]
resize call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[memcpy,reserve]
shrink call:[assert]
reserve call:[MemAlloc,MemFree,memcpy,sizeof] noreturn:[MemFree]
reserve_discard call:[MemAlloc,MemFree,sizeof] noreturn:[MemFree]
push_back call:[_grow_capacity,memcpy,reserve,sizeof] noreturn:[reserve]
pop_back call:[assert]
push_front call:[insert,push_back] noreturn:[insert,push_back]
erase call:[assert,memmove,sizeof]
erase call:[assert,memmove,sizeof]
erase_unsorted call:[assert,memcpy,sizeof] noreturn:[memcpy]
insert call:[_grow_capacity,assert,memcpy,memmove,reserve,sizeof] noreturn:[memmove,reserve]
contains
find
find
find_erase call:[erase,find]
find_erase_unsorted call:[erase_unsorted,find]
index_from_ptr call:[assert,return]
